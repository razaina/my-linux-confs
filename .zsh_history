grep -R "DIAG_TX_SIG"
grep -R "DIAG_RX_SIG"
grep -R "SIO_DONE_S"
grep "MSG_MED" data.bin
grep "REX" data.bin
grep -R "REX" data.bin
sudo grep -R "REX" data.bin
strings data.bin | grep "MSG_MED"
strings data.bin | grep "REX"
strings data.bin | grep "Mode violation"
strings data.bin | grep "violation"
strings data.bin | grep "wanted"
strings data.bin | grep "diag_"
grep -R "Assertion buf"
grep -R "ASSERT"
grep -R "New message while"
ping
ping google.com
strings data.bin | grep "diag_get_rx_pkt"
strings data.bin >| strings.txt
vim strings.txt
grep -R "CORE"
grep -R "core"
grep -R "core" .
grep -R "CORE" .
grep -R "sio_transmit"
grep -R "Out of command buffers"
grep -R "Invalid port id"
grep -R "sio_open called with"
grep -R "this is impossible"
grep -R "SIO_PORT_NULL" ../
vim show_device_info.rb
vim show_msm_messages.rb
ls *.py
vim define_address.py
grep -R "SIO_PORT_MAIN"
grep -R "ILLEGAL_COMMAND"
grep -R "sio_RS"
grep -R "SIO_STREAM_NO"
grep -R "SIO_NO_STREAM""
grep -R "SIO_NO_STREAM"
grep -R "DIAGCFG"
grep -R "DIAG_ASYNC"
grep -R "DIAG_ASYNC_CONTROL_CHAR"
grep -R "pkt_ptr"
grep -R "#define.0x1E
grep -R "#define.0x1E"
grep -R "#define * 0x1E"
grep -R "#0x1E"
cd ../rex
grep -R "0x1E"
grep -R "buf && sizeÃ©"
grep -R "buf && size"
grep -R "ESC_CHAR"
grep -R "iTail"
grep -R "CONTROL_CHAR"
vim vm696-pernel-f68bba3cb04b/arch/arm/mach-msm/lge/lge_diag_mtc.c
grep -R "0x5C" ../rex
cd ??.
grep -R "0x5C"
grep -R siolib
grep -R "siolib"
grep -R "siolib_stream_id""
grep -R "siolib_stream_id"
grep -R "ds3gsiolib.c"
cd ~/Docs
cd Articles
zip Articles javacard-logical-attacks.zip
zip javacard-logical-attacks.zip Articles
du -h javacard-logical-attacks.zip
ls SPecs
cd SPecs
zip jc-specs.zip javacard_specifications-3_0_4-RR
du -h jc-specs.zip
tar cvf javacard_specifications-3_0_4-RR jc-specs.gz
tar cvf jc-specs.gz javacard_specifications-3_0_4-RR
binwalk
binwalk data.bin
ls trash
cd MSM3000
cd rex
vim question-chestnut
grep -R "sio_do_escaping"
git
git clone git://github.com/imathis/octopress.git octopress
sudo gem install bundler
sudo gem install RedCloth -v '4.2.9'
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >>| ~/.bash_profile
vim .rbenv
sudo apt-get install rbenv
echo 'eval "$(rbenv init -)"' >>| ~/.bash_profile
source ~/.bash_profile
rbenv install 1.9.3-p0
gem install bundler
rake install
rake new_post["Test post"]
rake new_post["title"]
ls source
ls source/_posts
rake new_post["qsddqdsdq": qdsdqs dqsd qs"]
rake new_post["qsddqdsdq: qdsdqs dqsd qs"]
sudo rake new_post["qsddqsdsq qs d "]
rake new_post["qsddqsqs"]
rake new_post["dqsdqs"]
rake "new_post["qsddqsdqdsqds qsd qs"]"
vim ~/.zshrc
cd octopress
rbenv local 1.9.3-p0
rbenv rehash
sudo apt-get install ruby2.1
rbenv install 2.1
rbenv install --list
rbenv install 2.1.0
rake new_post
vim /tmp/ruby-build.20141218172234.29923.log
sudo rbenv install 2.1.0
rm -R octopress
rm .rbenv
rm -R .rbenv
haxelib install dconsole
haxelib install lime
lime
haxelib
haxelib install neko
sudo apt-get install neko
cd neko-2.0.0-linux
vim CHANGES
rm -R /usr/lib/neko/neko-2.0.0-linux
mv neko-2.0.0-linux/* /usr/lib/neko
cd /usr/lib/haxe/lib/lime/2,0,1/
neko
neko run.n
ls include
find . -iname "build.hxml"
cd haxe/lib/openfl/2,1,7/script
haxelib install lime-tools
cd lime-tools
cd 1,5,7
haxelib install svg
haxe build.hxml
cd lime
cd 2,0,1
haxelib run run.n
echo $HAXE_STD_PATH
ls ~/haxe-3.1.3
haxelib config
haxe tools.hxml
haxelib run lime setup
find . -iname "*.hxml"
cd tools
haxe svg.hxml
haxe run.hxml
rm -R neko-2.0.0-linux
tar xvf neko-2.0.0-linux.tar.gz
cd /usr/lib/neko
rm -R neko
sudo rm -R neko
mv neko-2.0.0-linux /usr/lib/neko
sudo mv neko-2.0.0-linux /usr/lib/neko
sudo haxelib run lime
sudo chown -R razaina:razaina /usr/lib/neko
cd /usr/lib/neko/ls
cd /usr/lib/neko/
neko test.n
haxelib setup
sudo chown -R razaina:razaina /usr/lib/haxe
haxelib run lime
gem install jekyll
mkdir website
rbenv
rbenv commands
rbenv uninstall 1.9.3p194
rbenv uninstall 1.9.3
rbenv uninstall ruby
sudo apt-get install ruby
sudo apt-get uninstall ruby
sudo apt-get remove ruby
ruby --version
sudo apt-get remove rbenv
ruby
sudo apt-get install ruby-full
gem
gem --version
sudo apt-get remove gem
sudo gem install jekyll
find ruby
find / -iname "ruby"
sudo find / -iname "ruby"
sudo apt-get install nodejs
sudo apt-get install python-software-properties python g++ make
vim /etc/apt/sources.list
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get install node.js
cd /home/razaina/web
cd /home/razaina/website
mkdir _include
mkdir _layouts
mkdir -posts
mkdir _posts
chown -R razaina:razaina *
chown -R razaina:razaina .
sudo chown -R razaina:razaina .
sudo chown -R razaina:razaina /usr/local/bin/jekyll
chown -R razaina:razaina /usr/lib/ruby/
sudo chown -R razaina:razaina /usr/lib/ruby/
sudo chown -R razaina:razaina /usr/lib/ruby/1.9.1/rubygems/dependency.rb
jekyll build
unzip poole-master.zip
rm poole-master.zip
cd poole-master
mv * ../
rm -R poole-master
rm index.md
ls about
sudo chwon -R razaina:razaina *
vim page.html
vim post.html
chmod +x build.sh
./build.sh
sudo ./build.sh
vim head.html
sudo jekyll --watch build
sudo jekyll build --watch
vim 2014-01-02-introducing-poole.md
lscd ../
ls _include
cd _includes/
vim comments.html
vim ../_layouts/default.html
sudo jekyll build
sudo jekyll build && chown -R razaina:razaina *
vim ../_includes/comments.html
rm _include
rm -R _include
vim _includes/comments.html
vim 2014-01-01-example-content.md
cd page2
ls public
ls _layouts
ls _includes/_site
vim _posts/2013-12-31-whats-jekyll.md
vim _posts/2014-01-02-introducing-poole.md
vim _posts/2014-01-01-example-content.md
vim archive.md
vim _includes
cd public
vim poole.css
gem --help
gem help commands
gem u rake
gem install rake
sudo gem install rake
sudo rake page name="toto.md"
sudo chown -R razaina:razaina /usr/local/bin
gem uninstall rake
sudo apt-get remove rake
sudo rm -R /usr/local/bin/rake
sudo rake
sudo apt-get install rake
rake --help
rake page
rake generate_session_store
bundle exec rake build
sudo bundle exec rake build
git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
git clone https://github.com/dhulihan/hooligan.git ../
git clone https://github.com/dhulihan/hooligan.git hooligan
vim packager.yml
ls themes
mv _layouts/ arc
cd _layouts
mkdir ../../_layouts
cp default.html page.html post.html ~/website/_layouts
mv * ../../_layouts
ls assets/themes/hooligan/
sudo rake theme:install git="https://github.com/dhulihan/hooligan.git"
rake
rake theme:install git="https://github.com/dhulihan/hooligan.git"
ls _includes
unzip jekyll-bootstrap-master.zip
rm jekyll-bootstrap-master.zip
cd jekyll-bootstrap-master
cp -R JB ~/website/_includes
vim public/css/poole.css
cd hooligan
vim darkstrap.css
git clone https://github.com/plusjade/jekyll-bootstrap.git
mv jekyll-bootstrap razaina.fr
sudo git push origin master
cd ~/.ssh
cat ~/.ssh/id_rsa.pub
git push origin master
git add
git add -p README.md
git commit -a
rake post title"Hello World"
rake post title="Hello World"
vim Rakefile
rm _posts/*.md
rake theme:install name="tom"
rake theme:install git="https://github.com/jekyllbootstrap/theme-tom.git"
grep -R "Fork me"
grep -R "type_script"
grep -R "typekit"
grep -R "JB"
cd _site/i
lcd _site/
sudo grep -R "badge"
cd JB
sudo grep -R "typekit-badge"
sudo grep -R "typekit"
vim settings.yml
grep -R "permalink"
sudo grep -R "permalink"
vim ~/website/razaina.fr/_config.yml
rake page title="PLdsqdqs"
vim new-page.md
rm new-page.md
rake page name="Lol/Testplop.md"
vim _includes/JB/pages_path
vim _includes/JB/categories_list
vim _includes/JB/pages_list
sudo grep -R "pages_list"
vim _posts/core-samples/2011-12-29-jekyll-introduction.md
cd _drafts
rake draft
vim pages_path
vim _includes/themes/tom/default.html
sudo grep -R "pages_path"
cd _includes/JB
rm pages_path
sudo grep -R "pages.html"
vim _site/pages.html
rm -R Lol
sudo jekyll build && sudo chown -R razaina:razaina *
cd core-samples
vim 2011-12-29-jekyll-introduction.md
rm -R _posts/*
okular timeline.pdf
vim README.ANDROID
ls jni
cp jni/Application.mk ~/workspace/TestOpenSSL
cp -R e_os2.h e_os.h crypto ssl include ~/workspace/TestOpenSSL
ls obj
cp Android.mk ~/workspace/TestOpenSSL/crypto
cp Android.mk ~/workspace/TestOpenSSL/ssl
grep -R "shuffle"
cd ../TestOpenSSL
ls -al *.c
ls *.cp
ls *.c
ls *.c | cat
ls *.c | cat >| plop.txt
grep -R "tls"
cp -R include ~/workspace/TestOpenSSL
ls aes.h
ls -al aes.h
ls makevms.com
ls ms
ls os2
ls test
ls tools
ls util
cd ../ssl
vim ssltest.c
grep -R KB5
grep -R "KB5_INCLUDES"
grep -R "KRB5_INCLUDES"
vim ssl/s3_srvr.c
vim ssl/d1_srtp.c
vim ssl/d1_srtp.cfg
ls ~/workspace/TestOpenSSL/ssl/srtp
ls ~/workspace/TestOpenSSL/ssl/srtp*
vim ~/workspace/TestOpenSSL/ssl/srtp.h
vim ~/workspace/TestOpenSSL/include/openssl/objects.h
vim ~/workspace/TestOpenSSL/ssl/d1_srtp.c
xradnr help
xrandr help
man xrandr
xrandr --help
xrandr --output VBOX1 --off
./Configure linux-generic32 no-idea no-bf no-cast no-seed no-md2 -DL_ENDIAN
vim Makefile e
vim import-openssl.sh
chmod +x import-openssl.sh
mkdir plop
mv import-openssl.sh plop
cd plop
mkdir patches
touch openssl.version
vim openssl.config
vim openssl.trusty.config
./import-openssl.sh import /home/razaina/openssl/openssl-1.0.1j.tar.gz
rm -r assets crypto include plop android-config.mk Android.mk e_os2.h e_os.h
cp ssl/testopenssl.cpp .
ls gen
git clone https://android.googlesource.com/platform/external/openssl.git
rm Application.mk
ls openssl
mv openssl/ssl
cd openssl/ssl
ls (al
mv openssl/* .
rm -R openssl
vim Apps-config-target.mk
vim apps
cp ~/workspace/ChestnutChallengeTwo/jni/Application.mk jni/
cd ~/android-ndk-r10d/build/core
vim Apps.mk
vim Crypto.mk
cd platforms/android-19/arch-arm/usr/lib/
ls *.mk
vim Ssl.mk
vim Ssl-config-target.mk
vim ~/workspace/TestOpenSSL/README.android
./import_openssl.sh regenerate patches/*.patch
./import_openssl.sh generate patches/*.patch
./testssl.sh
ndk-build -verbose
ndk-build clean -verbose
ndk-build clean --verbose
rm -R android.testssl crypto patches ssl *.mk *.sh *.h NOTICE MODULE_LICENSE_BSD_LIKE openssl.config openssl.trusty.config openssl.version README.android
tar xvf openssl-1.0.1j.tar.gz
cp -R crypto include ssl e_os2.h e_os.h ~/workspace/TestOpenSSL
mv testopenssl.cpp ssl
./Configure linux-generic32 shared no-hw no-comp no-engine no-idea no-bf no-cast no-seed no-md2 -DL_ENDIAN
cd asn1
vim PLop
vim Plop
vim *.mk
cd crypto/evp
find . -iname "modes_lcl.h"
cd crypto/modes
vim makevms.com
find . -iname "*armv4"
cd openssl-1.0.1g
cd ~/openssl/ls
vim crypto/aes/asm/aes-armv4.pl
find . -iname "*mont*"
find . -iname "*armv4*"
find . -iname "testopenssl*"
cd list
cd armeabi/
find . -iname "*testopenssl*"
vim ssl/ssl_utst.c
mv ssl/testopenssl.cpp ssl/testopenssl.c
vim md32_common.h
grep -R "HASH_BLOCK_DATA"
find . -iname "libcrypto*"
grep -R "libcrypto"
grep -R "libcrypto.so"
cd obj/local/armeabi/objs/crypto
cd ~/workspace/TestOpenSSL
grep -R "no-tls*"
ls *.h
ls eo_*
ls "eo_*"
ls "e_*"
ls include/openssl/sha*
vim include/openssl/sha.h
ls -al include/openssl/sha*
cd ../../include/openssl/
ls -al sha*
cd ../../crypto/sha
grep -R "sha256_block_data_order"
cd ~/openssl-1.0.1g
cd crypto/sha/asm
find . -iname "*.S"
ls "*.S"
perl sha1-586.pl
perl sha1-586.pl elf
grep -R "PERLASM"
grep -R "PERLASM_SCHEME="
cd crypto/sha
perl sha256-armv4.pl
perl sha256-armv4.pl >| sha256-armv4.S
vim sha256-armv4.S
perl sha1-armv4-large.pl >| sha1-armv4-large.S
vim sha1-armv4-large.S
perl sha512-armv4.pl >| sha512-armv4.S
cd ../ae
cd ae
perl aes-armv4.pl >| aes-armv4.S
perl armv4-mont.pl >| armv4-mont.S
cd ../../bbn
cd ../../aes/asm
cd ../../sha/asm
mv *.S ../
cd ss
cd ../crypto
find . -iname "0.9.9"
find . -R -iname "0.9.9*"
find . -R -iname "*dev*"
find . -iname "*dev*"
cd ../workspace/ChestnutChallengeTwo
cd 0.9.9-dev
cp -R ../../0.9.9-dev /home/razaina/workspace/TestOpenSSL/crypto
mv sha1-armv4-large.S sha1-armv4-large.s
mv sha256-armv4.S sha256-armv4.s
mv sha512-armv4.S sha512-armv4.s
cd ../aes
mv aes-armv4.S aes-armv4.s
cd ../bn
ls *.S
mv armv4-mont.S armv4-mont.s
cd Downloads
tar xvf openssl-1.0.1-stable-SNAP-20141228.tar.gz
vim sha256-armv4.s
cd workspace/TestOpenSSL
find . -iname "*.s"
perl aes-armv4.pl >| ../aes-armv4.s
cd ../../bn
perl armv4-mont.pl >| ../armv4-mont.s
cd ../../sha
perl sha1-armv4-large.pl >| ../sha1-armv4-large.s
perl sha256-armv4.pl >| ../sha256-armv4.s
perl sha512-armv4.pl >| ../sha512-armv4.s
cd ../../aes
vim sha/sha256-armv4.s
grep -R "TARGET_ARCH"
perl
perl aes-x86_64.pl
vim aes/aes-armv4.s
find . -iname "arm_arch*"
find . -iname "arm_arch.h"
vim crypto/aes/aes-armv4.s
cd crypto/0.9.9-dev
cd crypto/aes/asm
cd as
perl aes-armv4.pl --verbose
perl aes-armv4.pl -dsq
perl aes-armv4.pl >| plop.s
vim plop.s
vim arm_arch.h
cd aes/asm
perl --help
perl -C0 void aes-armv4.pl >| aes-armv4.s
perl -C0 aes-armv4.pl void >| aes-armv4.s
perl -C0 aes-armv4.pl void aes-armv4.s >| aes-armv4.s
vim aes-armv4.s
rm aes-armv4.s
vim aes-armv4.pl
ndk-build BIG_ENDIAN
tar xvf openssl-master.tar.gz
./import_openssl.sh
cd crypto
cd aes
cd openssl-1.0.1j
vim README.android
mv openssl-1.0.1-stable-SNAP-20141228 openssl-1.0.1j
ls openssl-1.0.1j
./check-all-builds.sh
mv openssl-1.0.1j openssl-1.0.1-stable-SNAP-20141228
sudo ./import_openssl.sh import openssl-1.0.1-stable-SNAP-20141228.tar.gz
chown -R razaina:razaina ./*
mkdir openssl-1.0.1j
./import_openssl.sh import openssl-1.0.1-stable-SNAP-20141228.tar.gz
cd openssl-1.0.1-stable-SNAP-20141228
cd android.testssl
vim ../aes-armv4.s
grep -R "APP_ABI"
vim ../../arm_arch.h
vim crypto/arm_arch.h
cd crypto/aes
vim aes-armv4.S
mkdir Chestnut
mkdir Dev
mkdir CE
adb pull /sdcard/pictures/Screenshots .
display Screenshot_2014-12-31-14-42-02.png
unzip com.caisseepargne.android.mobilebanking-1.apk
ls res
ls assets
dex2jar
unzip classes_dex2jar.src.zip
cp -R com AndroidManifest.xml assets res ../CE-Dev
unzip AndBug-master.zip
cd AndBug-master
git clone https://github.com/swdunlop/AndBug.git
cd info
vim README.rst
sudo ./andbug classes -p com.caisseepargne.android.mobilebanking
adb shell ps >| plop
./andbug classes -p com.caisseepargne.android.mobilebanking
./andbug classes -p com.caisseepargne.android.mobilebanking source /home/razaina/Chestnut/Dev/CE-Dev
./andbug source /home/razaina/Chestnut/Dev/CE-Dev classes -p com.caisseepargne.android.mobilebanking
./andbug source /home/razaina/Chestnut/Dev/CE-Dev
cd /home/razaina/Chestnut
sudo apktool d -f --keep-broken-res /home/razaina/ChesnutChallenge/ChestnutChallengeOne.apk /home/razaina/ChesnutChallenge/Decomp
sudo chown razaina:razaina /home/razaina/Chestnut
apktool d /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1.apk
sudo apktool d /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1.apk
mkdir ApktoolTest
cp com.caisseepargne.android.mobilebanking-1.apk ApktoolTest
cd ApktoolTest
sudo apktool d --keep-broken-res /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1.apk
sudo apktool d --keep-broken-res -f /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1.apk
sudo apktool d com.caisseepargne.android.mobilebanking-1.apk
sudo apktool d com.caisseepargne.android.mobilebanking-1.apk -f
sudo apktool d /home/razaina/Chestnut/Dev/CE/ApktoolTest/com.caisseepargne.android.mobilebanking-1.apk -f
sudo apt-get uninstall apktool
sudo apt-get install apktool
sudo apt-get remove apktool
cp -ln apktool.jar apktool
java -jar apktool.jar
sudo java -jar apktool.jar
sudo chown razaina:razaina /usr/local/bin/apktool
sudo chown razaina:razaina /usr/local/bin/apktool.jar
cd /home/razaina/Downloads/
mkdir jdk
mv jdk-7u71-linux-i586.tar.gz jdk
cd jdk
tar xvf jdk-7u71-linux-i586.tar.gz
cd jdk1.7.0_71
iceweasel README.html
cd /opt
sudo su
java -jar /usr/local/bin/apktool.jar
sudo apktool
ls -al apktool
file apktool
ln -s apktool.jar apktool
rm apktool
chmod +x apktool
vim ipcluster
grep -R "usr/bin"
vim apktool
dc Chestnut
cd CE-Dev
apktool d com.caisseepargne.android.mobilebanking-1.apk
mkdir APKs
mv com.caisseepargne.android.mobilebanking-1.apk APKs
apktool
file AndroidManifest.xml
ls com.caisseepargne.android.mobilebanking-1
ls com.caisseepargne.android.mobilebanking-1/original
ls com.caisseepargne.android.mobilebanking-1/build
ls com.caisseepargne.android.mobilebanking-1/build/apk
strings APKs/com.caisseepargne.android.mobilebanking-1.apk >| plop.txt
vim plop.txt
strings
strings -f APKs/com.caisseepargne.android.mobilebanking-1.apk | grep "Identification"
strings -f ./* | grep "Identification"
strings -R -f * | grep "Identification"
strings -r -f * | grep "Identification"
strings -f * | grep "Identification"
grep -R -l "Identification"
rm plop.txt
grep -R "Identification"
grpe -R "authent_ident_cli"
grep -R "authent_ident_cli"
cd com/caisseepargne/android/mobilebanking/activities/
vim AAuthent.smali
find . -iname "andbug"
cd Development/AndBug
./andbug source /home/razaina/Chestnut/Dev/CE-Dev -p com.caisseepargne.android.mobilebanking
make uninstall
make install
sudo ./andbug
python setup.py
python setup.py --help-comands
python setup.py --help-commands
python setup.py install
sudo python setup.py install
adh shell ps
sudo dpkg --configure -a
cd Dev/CE
cd AndBug
./andbug
update-alternatives
update-alternatives --list python
update-alternatives --config python
python -v
cd scripts-2.7
vim andbug
cd lib.linux-i686-2.7
cd andbug
sudo find / -iname "command.py"
ls andbug
ls -al andbug
sudo chown razaina:razaina andbug
cd CE-De
cd ../CE-Dev
cd ../CE
apktool b /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1
sudo apt-get --reinstall install libc6-i686
strings /lib/i386-linux-gnu/i686/cmov/libm.so.6 | grep "__get_cpu_features"
strings /lib/i386-linux-gnu/i686/cmov/libc.so.6 | grep "__get_cpu_features"
strings /lib/i386-linux-gnu/i686/cmov/libc-2.19.so | grep "__get_cpu_features"
strings /lib/i386-linux-gnu/ld-2.19.so | grep "__get_cpu_features"
strings /lib/i386-linux-gnu/ld-2.19.so
sudo apt-get install --reinstall binutils
readlink -f /lib/ld-linux.so.2
ld --help
md --version
ld --version
dlocate /usr/bin/ld
locate /usr/bin/ld
readlink -f /lib/i386-linux-gnu/i686/cmov/libc.so.6
readlink -f /lib/i386-linux-gnu/i686/cmov/libm.so.6
strings /lib/i386-linux-gnu/ld-2.19.so | grep "get_cpu"
nm
nm --help
sudo cp /lib/i386-linux-gnu/i686/cmov/libm-2.19.so /lib/i386-linux-gnu
hexdump AndroidManifest.xml
strings AndroidManifest.xml
file apktool1.5.2.tar.bz2
bunzip apktool1.5.2.tar.bz2
bunzip
bunzip2
bunzip2 apktool1.5.2.tar.bz2
ls apk*
tar xvf apktool1.5.2.tar
cd apktool1.5.2
ls ~/apk*
ls ~/
cd /usr/local/bin/a
cd /usr/local/bin/
mv apktool.jar apktool-RC.jar
mv apktool.jar /usr/local/bin
ls -al apk*
apktool b com.caisseepargne.android.mobilebanking-1
rm -R com.caisseepargne.android.mobilebanking-1
mv apktool.jar apktool-1.5.2.jar
mv apktool-RC.jar apktool.jar
apktool d APKs/com.caisseepargne.android.mobilebanking-1.apk
apktool d -f APKs/com.caisseepargne.android.mobilebanking-1.apk
apktool b --help
cd original
cd apk
find / -iname "libc.so*"
sudo find / -iname "libc.so*"
sudo strings libc.so.6 | grep "get_cpu"
ld libc.so.6
sudo ld libc.so.6
sudo ldd libc.so.6
ls libc.so.6
ls libc.so.6*
mv libc.so.6 libc.so.6.bak
sudo mv libc.so.6 libc.so.6.bak
cp i386-linux-gnu/i686/cmov/libc.so.6 .
sudo cp i386-linux-gnu/i686/cmov/libc.so.6 .
sudo mv libc.so.6.bak libc.so.6
ls -al libc*
sudo ldconfig --help
sudo strings i386-linux-gnu/i686/cmov/libc.so.6 | grep "get_cpu"
sudo strings /lib/ld-linux.so.2| grep "gep_cpu"
sudo find / "linux-gate-so.1"
sudo find / "linux-gate.so.1"
sudo whereis linux-gate.so.1
sudo find linux-gate.so.1
sudo find . linux-gate.so.1
sudo ldd i386-linux-gnu/i686/cmov/libc.so.6
sudo strings i386-linux-gnu/i686/cmov/libm.so.6 | grep "get_cpu"
vim i386-linux-gnu/i686/cmov/libm.so.6
cd i386-linux-gnu/i686/cmov
sudo ls -al libm.so.6
sudo strings libm-2.19.so | grep "get_cpu"
sudo vim libm-2.19.so
vim libm-2.19.so
vim libm.so.6
vim /lib/i386-linux-gnu/i686/cmov/libm.so.6
strings /lib/i386-linux-gnu/i686/cmov/libm.so.6 | grep "get"
cd /lib
sudo ldd i386-linux-gnu/i686/cmov/libm.so.6
strings /lib/ld-linux.so.2 | grep "get_cpu"
strings i386-linux-gnu/i686/cmov/libc.so.6 | grep "get_cpu"
strings i386-linux-gnu/i686/cmov/libc.so.6 | grep "GLIBC_PRIVATE"
cd ~/Chestnut/Dev/CE
apktool b -f /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1
sudo strings /lib/i386-linux-gnu/i686/cmov/libc.so.6 | grep "GLIBC_PRIVATE"
sudo strings /lib/i386-linux-gnu/i686/cmov/libm.so.6 | grep "GLIBC_PRIVATE"
sudo apktool b -f /home/razaina/Chestnut/Dev/CE/com.caisseepargne.android.mobilebanking-1
ldd /lib/i386-linux-gnu/i686/cmov/libm.so.6
sudo strings /lib/i386-linux-gnu/i686/cmov/libm.so.6 | grep "get_cpu"
sudo strings /lib/i386-linux-gnu/i686/cmov/libc.so.6 | grep "get_cpu"
ldd -d -r /lib/i386-linux-gnu/i686/cmov/libm.so.6
ldd -d -r /lib/i386-linux-gnu/i686/cmov/libc.so.6
lsb_release -a
sudo apt-get dist-upgarde
cd APKs
adb install com.caisseepargne.android.mobilebanking-1.apk
sudo andbug
sudo andbug -p com.caisseepargne.android.mobilebanking
find / -iname "andbug"
sudo find / -iname "andbug"
cd ~/Development/AndBug/
vim setup.py
cd /home
cd /usr/local/lib/python2.7/dist-packages/andbug
sudo chown -R razaina:razaina andbug
andbug classes -p com.caisseepargne.android.mobilebanking
echo $ANDROID_SDK
echo $ANDROID_*
echo "$ANDROID_SDK"
echo $ANDROID_NDK
vim .bashrc
sudo andbug classes -p com.caisseepargne.android.mobilebanking
cd Chestnut/Dev
sudo andbug classes -p APKs/com.caisseepargne.android.mobilebanking-1.apk
cd ~/Development/AndBug
lib
export PYTHONPATH=`pwd`/lib
echo $PYTHONPATH
andbug classes -p chestnut.challenge.two
cd Chestnut/Dev/CE
andbug ct -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1
andbug tt -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1
watch andbug tt -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1
andbug
sudo wireshark &
sudo wireshark
find / -iname "tcpdump"
sudo find / -iname "tcpdump"
tcpdump
adb push /usr/bin/tcpdump /system/xbin/tcpdump
adb root
adb remount
adb push /usr/sbin/tcpdump /system/xbin/tcpdump
adb shell chmod 6755 /data/local/tmp/tcpdump
adb shell chmod 6755 /system/xbin/tcpdump
adb shell tcpdump
tar xvf libpcap-1.6.2.tar.gz
tar xvf tcpdump-4.6.2.tar.gz
cd libpcap-1.6.2
arm-linux-gcc
sudo CC=arm-linux-gcc ac_cv_linux_vers=2 ./configure --host=arm-linux --with-pcap=linux
sudo ./configure
cd tcpdump-4.6.2
CC=arm-linux-gcc ac_cv_linux_vers=2 ./configure --host=arm-linux --with-pcap=linux
vim INSTALL
vim INSTALL.txt
find . -iname "tcpdump"
find . -iname "tcpdump*"
CC=arm-linux-gcc ac_cv_linux_vers=2 sudo ./configure --host=arm-linux --with-pcap=linux
export CC=arm-linux-gnueabi-gcc
./configure --host=arm-linux --with-pcap=linux
cd ~/Downloads/libpcap-1.6.2
vim pcap-bt-monitor-linux.c
uname -v
sudo echo $ac_cv_linux_vers
sudo export ac_cv_linux_vers=3
ls ../libpcap-1.6.2/libpcap.a
ac_cv_linux_vers=3 CFLAGS=-static CPPFLAGS=-static LDFLAGS=-static sudo ./configure --host=arm-linux --disable-ipv6
nm -o /home/razaina/Downloads/libpcap-1.6.2/libpcap.a | egrep scanner.o
sudo nm -o /home/razaina/Downloads/libpcap-1.6.2/libpcap.a | egrep scanner.o
sudo nm -o /home/razaina/Downloads/libpcap-1.6.2/libpcap.a
sudo apt-get install g++-4.4-arm-linux-gnueabi
arm-linux-gnueabi-gcc -V
arm-linux-gnueabi-gcc -v
cd ../libpcap-1.6.2
CC=arm-linux-gnueabi-gcc
CC=arm-linux-gnueabi-gcc sudo ./configure --host=arm-linux --with-pcap=linux
gcc
gcc --help
sudo make clean
sudo CC=arm-linux-gnueabi-gcc sudo ./configure --host=arm-linux --with-pcap=linux
sudo vim Makefile
sudo make
cd ../tcpdump-4.6.2
sudo ac_cv_linux_vers=3 CFLAGS=-static CPPFLAGS=-static LDFLAGS=-static sudo ./configure --host=arm-linux --disable-ipv6
watch andbug methods -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1 com.caisseepargne.android.mobilebanking.activities.AAuthent onCreate
watch andbug methods -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1 com.caisseepargne.android.mobilebanking.commons.c.a.p run
watch andbug methods -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1 com.caisseepargne.android.mobilebanking.commons.c.a.p init
watch andbug methods -p com.caisseepargne.android.mobilebanking -s com.caisseepargne.android.mobilebanking-1 com.caisseepargne.android.mobilebanking.commons.c.a.p p
ps | grep "sdk"
ps all | grep "sdk"
ps all
find /home/razaina/ -iname "substrate*"
jdb
watch adb jdwp
adb forward tcp:12345 jdwp:7025
adb forward tcp:12345 jdwp:7071
adb forward tcp:12345 jdwp:7096
adb jdwp
adb forward tcp:12345 jdwp:7114
jdb -attach localhost:12345 -sourcepath /home/razaina/Chestnut/Dev/CE/ -classpath /home/razaina/Chestnut/Dev/CE/
jdb -attach localhost:12345 -classpath /home/razaina/Chestnut/Dev/CE/
jdb -attach localhost:12345
jdb -v -attach localhost:12345
ls com
cd com.caisseepargne.android.mobilebanking-1
cd com
cd caisseepargne
cd android
cd mobilebanking
cd commons/c/a
jdb -attach localhost:12345 -v
jdb -attach localhost:12345 -classpath /home/razaina/Chestnut/Dev/CE/com/caisseepargne/android/mobilebanking/commons/c/a/
jdb -attach localhost:12345 -classpath /home/razaina/Chestnut/Dev/CE/com/caisseepargne/android/mobilebanking/commons/c/a
jdb -attach localhost:12345 -sourcepath /home/razaina/Chestnut/Dev/CE/
jdb -attach localhost:12345 -sourcepath /home/razaina/Chestnut/Dev/CE/com/caisseepargne/android/mobilebanking/commons/c/a
cd .ssh
adb remove
cd ~/workspace/HookCE
adb shell am start -n fr.razaina.hook.ce/fr.razaina.hook.ce.Main
sudo find /home/razaina/ -iname "substrate*"
cp ~/android-sdks/extras/saurikit/cydia_substrate/substrate-api.jar libs
adb logcat -s "Main"
adb pull com.saurik.substrate
adb pull /data/app/com.caisseepargne.android.mobilebanking-1.apk
adb pull /data/app/com.saurik.substrate
adb pull /data/app/com.saurik.substrate-1.apk
killall -9 emulator-arm
adb logcat -S "hook"
adb logcat -s "hook"
adb logcat "hook":i
adb logcat "hook":I
adb logcat -s
adb logcat -s "I"
adb logcat -help
adb logcat *:d
adb logcat "*:d"
adb logcat "hook"
adb logcat -s "razaina"
adb logcat "razaina"
adb logcat *:s 'hook'
adb logcat '*:s' 'hook'
adb logcat '*:I' 'hook'
adb install HookCE.apk
adb uninstall fr.razaina.hook.ce
adb install com.saurik.substrate-1.apk
adb uninstall com.saurik.substrate
adb shell ps | grep "time"
adb uninstall com.example.timeWorld
adb shell ps | grep "moo"
ssh chesnut@pulsar.hd.free.fr
ls .ssh
scp razaina@sherlock:/opt/public/qemu-system-arm .
mkdir chestnut
mv live-demo-launcher chestnut
sudo killall -9 tmux
sudo killall -9 tools
tar xvf android-sdk_r24.0.2-linux.tgz
zip
unzip
unzip android-studio-ide-135.1641136-linux.zip
mv android-studio ~/
rm android-studio-ide-135.1641136-linux.zip
sudo apt-get install emu-kvm
sudo apt-get install qemu-kvm
sudo apt-get install libvirt-bin
sudo adduser razaina kvm
sudo adduser razaina libvirt
virsh list --all
cd chestnut/live-demo-launcher
cd launcher
cd /usr/local/bin
cp -s /home/razaina/android-studio/bin/studio.sh
cp -s /home/razaina/android-studio/bin/studio.sh .
ls studio.sh
mv studio.sh android-studio
ls android-studio
find . -iname "adbi"
sudo find . -iname "adbi"
cd Gits/adbi
rm base
ls -l base
ls -l dalvikhook
cd Gits/ddi
ls -l base dalvikhook
find . -iname "busybox"
cd app/src/main/res/raw/busybox
cd app/src/main/res/raw/
rm -R live-demo-launcher
cp generate_file.py ~/Development/chestnut/fr.razaina.demo.hook.ce/jni
vim generate_file.py
python generate_file.py
python generate_file.py hookce.c
python generate_file.py >| hookce.c
cd../
cd res
cd raw
cp ~/Development/chestnut/fr.razaina.demo.hook.ce/libs/armeabi/libdemohookce.so .
grep -R "ptrace"
grep -R "[-]"
grep -R "cannot"
grep -R "\[-\]"
sudo grep -R "\[-\]"
grep -R "Adding"
cd ../fr.razaina.demo.hook.ce
cd ../../jni
ndk-build cledan
ls libs/armeabi/
vim jni/hookce.c
adb push liblive.so /data/local/tm
vim *.c */mk
grep -R "log_"
grep -R "log"
cd src/androidTest
ln -s ~/Gits/adbi/instruments/base base
adb push busybox /data/local/tmp
adb push needle /data/local/tmp
ndk-build*
adb push libdemohookce.so /data/local/tmp
cd base/fg
cd ../jni/
cd local
cd ~/Development/chestnut/fr.razaina.demo.hook.ce/jni/dalvikhook
cd obj/local/armeabi/
ls *;a
ls *.a
cd obj/local/armeabi
rm libbase.a
cd obj/local
cd ../ddi
cd local/armeabi
rm libdalvikhook.a
cd ../obj/local
cd ../libs/armeabi
cd ../android-ndk-r10d
find . -iname "ndk-build"
sudo find . -iname "ndk-build"
mkdir mulliner
cd mulliner
git clone https://github.com/crmulliner/ddi
git clone https://github.com/crmulliner/adbi
cd adbi
cd instruments
cd base
ln -s ~/Gits/ddi/dalvikhook dalvikhook
rm dalvikhook
ln -s ~/Gits/mulliner/ddi/dalvikhook dalvikhook
cd ../libs
adb push liblive.so /data/local/tp
adb push liblive.so /data/local/tmp
ls ../../../adbi/instruments
cd jni/
adb push ../app/src/main/res/raw/liblive.so /data/local/tmp
cd ../app/src/main/res/raw/
strings liblive.so
strings liblive.so | grep "dvm"
cd libs/armeabi
strings liblive.so| grem
strings liblive.so| grep "dvm"
strings liblive.so| grep "dalvik"
strings liblive.so | grep "dalvik"
strings liblive.so | grep "base"
strings liblive.so| grep "base"
git clone chestnut@pulsar.hd.free.fr:live-demo-launcher
rm base dalvikhook
ln -s ~/Gits/mulliner/adbi/instruments/base base
ln -s ~/Gits/mulliner/ddi/dalvikhook/ dalvikhook
git clone chestnut@pulsar.hd.free.fr:needle
cd ~/Gits/ddi
cd ../examples
rm libs/armeabi/libstrmon.so
adb push ../libs/armeabi/libstrmon.so
cd test
vim test.c
cd ../../../mulliner
cd smsdispatch
adb push libs/armeabi/libstrmon.so /data/local/tmp
ls ../obj
ls ../obj/local/armeabi
cd base/obj/local/armeabi/
cd ~/Development/chestnut/live-demo-launcher/jni
ls base
ls -al base
ls dalvikhook/jni
ls dalvikhook/jni/libs
ls base/obj/local/armeabi
ls dalvikhook/obj/local/armeabi
cd ~/Gits/mulliner/ddi/
cd examples
cd strmon
cd Development/
cd ../ches
rm -R decomp
cd proguard
rm -R proguard
cd bin/
vim proguard.txt
rm obj/local/armeabi/libchestnutchallengelib.so
rm libs/armeabi/libchestnutchallengelib*
rm bin/classes.*
grep -R "chestnut"
vim resolve.py
cp xor.py decode.py
vim decode.py
vim xor.py
adb uninstall com.ul.android.challenge.one
cd workspace/ULChallengeOne
mkdir decomp
cp ULChallengeOne.apk decomp
cd decomp
unzip ULChallengeOne.apk
dex2jar classes.dex
sudo apktool d ULChallengeOne.apk
sudo chown -R razaina:razaina UL
sudo chown -R razaina:razaina ULChallengeOne
cd ULChallengeOne
cd smali
cd com/ul/android/challenge
cd one
file libulchallengeonelib.so
hexdump libulchallengeonelib.so
aapt
sudo apt-get appt
sudo apt-get aapt
adb push ../libs/armeabi/liblive.so
adb push ../libs/armeabi/liblive.so /data/local/tmp
cd ../../fr.razaina.demo.hook.ce
cp mon.c mon.c.bak
cd ~/Chestnut/ls
cd CE
vim hookce.c
mv Application.mk Application
mkdir libdemohook
cp -R ../fr.razaina.demo.hook.ce/jni .
rm Application
rm hookce.c
cd ddi
cd dalvikhook
cd ../examples/strmon
adb push ../libs/armeabi/libstrmon.so /data/local/tmp
adb push ../libs/armeabi/libdemohookce.so
rm mon.c
mv mon.c.bak mon.c
cd libdemohook
adb logcat (c
cd ~/Development/chestnut/live-demo-launcher
vim hooks.c
mkdir report.c
rm -R report.c
touch report.c
mkdir Web
git clone chestnut@pulsar.hd.free.fr:live-demo-app
git clone chestnut@pulsar.hd.free.fr:live-demo-server
cd live-demo-app
cd ../home
vim tests.py
cd templates/ls
vim manage.py
cd home
vim settings.py
vim urls.py
cd web
cd migrations
cd static
cd ../js
vim app.js
cd social
cd templates
vim forms.py
vim views.py
touch report.php
cd ~/Development/
cd live-demo-server
vim server.py
lsusb
mount
mount --ghelp
fdisk -l
mkdir /mnt/key
cd /mnt
sudo mkdir key
sudo vim /etc/fstab
cd key
cp -R ~/workspace/ULChallengeOne/bin/ULChallengeOne.apk .
umount /dev/sdb1
sudo ls /mnt/key
mount /dev/sdb1 /mnt/key
sudo mount /dev/sdb1 /mnt/key
cd System\ Volume\ Information
sudo fdisk -l
mount -a
sudo mount -a
cd /mnt/key
sudo cp -R ~/workspace/ULChallengeOne/bin/ULChallengeOne.apk .
sync
sudo umount /dev/sdb1
cd ~/workspace/ULChallengeOne
cd scripts
python decode.py
vim report.php
vim *.c
vim ~/Development/chestnut/fr.razaina.demo.hook.ce/jni/report.c
vim AndroidManifest.xml
curl --help
curl http://razaina.fr/chestnut/report.php
curl http://razaina.fr/chestnut/report.php\?ce_login\=qsddqqsd\&ce_pwd\=dqsdqsdqsdqs
vim report.c
grep -R "report"
cp /media/Share/ce-cc.png ~/Chestnut/Dev/Web
rm report.c
adb push ../libs/armeabi/libdemohookce.so /data/local/tmp
cp ../libs/armeabi/libdemohookce.so ../app/src/main/res/raw
adb psh
adb ps
adb shell ps
adb unsintall fr.razaina.demohookce
adb unintall fr.razaina.demohookce
adb uninstall | grep uninstall
vim ~/.irssi/config
okular timeline.pdf&
cd ~/Chestnut/Dev/Web
unzip buckwilson-Lightbox_me-352d67e.zip
cd buckwilson-Lightbox_me-352d67e
vim jquery.lightbox_me.js
mv jquery.lightbox_me.js ~/Chestnut/Dev/Web
vim *.php *.css
cd ~/Development/chestnut/fr.razaina.demo.hook.ce
echo $TOOLCHAIN_PATH
cd /proc/
vim tmp
whois razaina.fr | grep "charlie"
whois razaina.fr
whois http://razaina.fr
whois elysee.fr
/irssi
adb shell screenrecord /sdcard/vid.mp4
find ~/ -iname "screenrecord"
adb shell screenrecord
sudo apt-get install recordmydesktop
mkdir video
adb pull /sdcard/ScreenRecorder/SCR_20150110_183253.mp4 .
vlc SCR_20150110_183253.mp4&
rm SCR_20150110_183253.mp4
adb pull /sdcard/ScreenRecorder/SCR_20150110_184805.mp4
vlc SCR_20150110_184805.mp4
rm SCR_20150110_184805.mp4
adb pull /sdcard/ScreenRecorder/SCR_20150110_190045.mp4
ffmpeg -i out.ogv -vcodec libx264 -acodec none out.mp4
sudo apt-get install x264
ffmpeg -i out.ogv -vcodec libx264 out.mp4
ffmpeg -i out.ogv -vcodec libx264 -strict experimental out.mp4
cp -R video /media/Share/chestnut
sudo apt-get install blender
cd vu
cp /media/Share/chestnut/video/SCR_20150110_190045.mp4 .
vlc SCR_20150110_190045.mp4
sudo cd tmp
cp out.ogv bk.ogv
display 0001.png
display 0180.png
vlc 3356.blend
vlc 0001-0250.dvd
vlc bk.ogv
ffmpeg -i out.ogv -vcodec libx264 "vid.mp4"
ffmpeg -strict experimental -i out.ogv -vcodec libx264 "vid.mp4"
vlc vid.mp4
rm vid.mp4
sudo apt-get install arista
arista-transcode -v -p H.264 out.ogv
sudo apt-get install faac
sudo ap-get install libfaac
sudo ap-get install libfaac0
sudo apt-get install gstreamer-faac
sudo apt-get remove arista
sudo apt-get auto-remove
ffmpeg -i out.ogv -aq 80 -vcodec libx264 -preset slow -crf 5 -threads 0 output.mp4
rm 0001-0250.dvd 3356.blend
rm *.ogv
cd ../Dev
vim style.css
cd ../../video
rm out.webm
adb pull /sdcard/ScreenRecorder/SCR_20150110_223118.mp4
vlc SCR_20150110_223118.mp4
sudo apt-get install avidemux
ffmpeg -i SCR_20150110_223118.mp4 -vf "transpose=1" demohookce-vid.mp4
vlc demohookce-vid.mp4
rm demohookce-vid.mp4
cp SCR_20150110_223118.mp4 /media/Share/chestnut/video
cp /media/Share/chestnut/video/SCR_20150110_223118.avi .
mv out.ogv Chestnut/video
ffmpeg -i out.ogv -strict experimental -aq 80 -vcodec libx264 -preset slow -crf 5 -threads 0 output.mp4
rm 0001-0250.mp4
display output.mp4
vlc SCR_20150110_223118.avi
sudo apt-get install simplescreenrecorder
sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder
sudo apt-add-repository
sudo apt-get install apt-file && apt-file update
sudo apt-get install python-software-properties
sudo apt-get install software-properties-common
apt-file search add-apt-repository
sudo add-apt-repository
sudo dpkg --add-architecture i386
sudo apt-get install build-essential pkg-config qt4-qmake libqt4-dev libavformat-dev libavcodec-dev libavutil-dev libswscale-dev libasound2-dev libpulse-dev libjack-jackd2-dev libgl1-mesa-dev libglu1-mesa-dev libx11-dev libxfixes-dev libxext-dev libxi-dev g++-multilib libx11-6 libxext6 libxfixes3 libxfixes3:i386 libglu1-mesa:i386
cd /usr/lib/i386-linux-gnu
ls libGL*
git clone https://github.com/MaartenBaert/ssr
cd ssr
sudo apt-get install libavcodec-dev
sudo apt-get install libav
sudo apt-get install libav-tools libavcodec-extra-53 sudo apt-get install build-essential pkg-config qt4-qmake libqt4-dev libavformat-dev \\
libavcodec-dev libavutil-dev libswscale-dev libasound2-dev libpulse-dev libjack-jackd2-dev \\
libgl1-mesa-dev libglu1-mesa-dev libx11-dev libxfixes-dev libxext-dev libxi-dev g++-multilib \
: 1420969730:0;sudo apt-get install libav-tools libavcodec-extra-53 libavcodec53 libavdevice-dev libavdevice-extra-53 libavfilter-dev
sudo apt-get install libjack-eev
sudo apt-get install libjack-dev
sudo apt-get install libavformat
sudo apt-get install libavformat-dev
./simple-build-and-install
sudo apt-get install screencast
rm -R ssr
cp -R out.ogv /media/Share/chestnut/video
vlc 0001-0250.mp4
sudo apt-get install byzanz
ps | grep byzanz
byzanz
byzanz-record
byzanz-record -v
byzanz-record -v plop.mk4
vlc plop.mk4
rm plop.mk4
byzanz-record --help
byzanz-record -v -c --height=400 --width=400 plop.mp4
mv plop.mp4 plop.gif
display plop.gif
sudo apt-get remove byzanz
sudo apt-get install gtk-recordmydesktop
rm *.ogv *.mp4 *.avi
rm plop.gif
adb pull /sdcard/ScreenRecorder/SCR_20150111_120349.mp4
vlc SCR_20150111_120349.mp4
cp SCR_20150111_120349.mp4 /media/Share/chestnut/video
cd /tmp
ls *.mp4
vlc plop.mp4
rm plop.mp4
ls *.ogv
ls *.mp*
rm SCR_20150111_120349.mp4
dqsdqsdqs qs
cp ~/out.ogv .
rm Ã¹.ogv
adb pull /sdcard/ScreenRecorder/SCR_20150111_121137.mp4
vlc out.mp4
find ~/ -iname "screen"
sudo find ~/ -iname "screen"
rm out.mp4
rm *.mp4
java -jar Dahu-0.3.jar
rm Dahu-0.3.jar
sudo apt-get install kazam
vim ../Dev/Web
cd ../Dev/Web
vlc out.ogv
adb pull /sdcard/ScreenRecorder/SCR_20150111_142345.mp4 .
cp SCR_20150111_142345.mp4 /media/Share/chestnut/video
cp /media/Share/chestnut/video/SCR_20150111_142345.mp4 .
vlc SCR_20150111_142345.mp4
adb shell screenrecorder /sdcard/
cd ~/android-sdks
cd platform-tools
cd ~/Chestnut/dec
ps | grep gtk
ladb logcat -c
ps | grep record
ps | grep "record"
sudo ps | grep "record"
ps
sudo ps
adb logcat -c && adb logcat | grep "com.live"
grep -R "com.live"
killall -9 logcat
android-studio --v
android-studio -verbose
grep -R "write_"
grep -R "write_mem"
cd app/src/main/res/raw
adb pull /data/local/tmp/needle .
adb uninstall fr.razaina.demohookce
adb logcat | grep "demohook"
cd video
adb pull /sdcard/screencast.mp4 .
rm out.ogv
vim record.sh
find . -iname "*.sh"
find ~/ -iname "*.sh"
vim ~/workspace/ChestnutChallengeTwo/crypto/threads/pthread2.sh
chmod +x record.sh
./record.sh
rm screencast.mp4
adb shell screenrecord --help
ffmpeg -video_size 1024x768 -framerate 25 -f x11grab -i :0.0+0,0 output.mp4
rm output.mp4
ffmpeg -video_size 1920x1080 -framerate 25 -f x11grab -i :0.0+0,0 output.mp4
mv output.mp4 ~/Chestnut/video
cd ~/chesnut/video
vlc screencast.mp4
vlc 0001-0806.mp4
vlc 0001-1501.mp4
vlc 0001-0400.mp4
vlc ls
cp output.mp4 screencast.mp4 /media/Share/chestnut/video
sudo apt-get install kdenlive
vlc output.mp4
cd Chestnut/video
cd ~/kdenlive
vlc capture0000.ogv
recordmydesktop
killall -9 recordmydesktop
recordmydesktop --help
recordmydesktop --no-sound
adb shell screenrecord --verbose /sdcard/screencast.mp4
adb logcat | grep "com.live"
adb pull /sdcard/screencast.mp4
vlc screencast.mp4&
cp out.ogv ~/Chestnut/video
vlc demo001.flv
cd ~/Chestnut/video
cp out.ogv /media/Share/chestnut/video
cp /media/Share/chestnut/video/out.mp4 .
vlc demo001.mpg
rm *.mpg
vlc demo001.mp4
cp demo001.mp4 /media/Share/chestnut/video
cd ~/Chestnut/Dev
cd Web
vim *.php
cp /media/Share/chestnut/video/democe.mp4 ~/Chestnut/Dev/Web
cd ~/Chestnut/
cd CE/
cd fr.razaina.demo.hook.ce/jni
grep -R "thread"
cd /media/Share/javacard
cd JCDK_3.0.4_Classic
vim normalizer.bat
ls *.run
chmod +x ida_d7610867245eb04f218c073fb39840cb.key
chmod -x ida_d7610867245eb04f218c073fb39840cb.key
chmod +x idapronl_hexarml_141229_d7610867245eb04f218c073fb39840cb.run
./idapronl_hexarml_141229_d7610867245eb04f218c073fb39840cb.run
whereis idaq
sudo whereis idaq
sudo find / -iname "idaq"
cd live-demo-launcher
rm -R CTATest001
android-studio --help
sudo find / -iname "android-studio"
cd ~/android-studio
vim /usr/local/bin/android-studio
./studio.sh
vim studio.sh
reboot
android-studio
ps | grep android
sudo ps | grep android
cd CTATest001
cd fr.razaina.demo.hook.ce
cd app/
cd fr/razaina/demohookce/
find . -iname jni
cp Android.mk ~/Development/chestnut/CTATest001/jni
touch cta.c
vim mon.c
touch Android_Class_SystemClock.txt
cd ~/workspace/ChestnutChallengeTwo
mv cta.c cta.cpp
vim *
find ~/android-ndk-r10d -iname "librt*"
sudo find / -iname "librt*"
sudo find / -iname "librt.h"
adb uninstall fr.razaina.ctatest0001
ls ../libs/armeabi/libcta.so
cd libs
cd arpwatch
cd ls
mv jni app
cd app/jni/
adb uninstall fr.razaina.ctatest001 && ndk-build
cd ../obj
ls libs/armeabi
mv jni src/main
cd src/main
rm -R ../../libs/armeabi
touch utils.c
mv jni ../../
mv jni ../
ls libs
cd obj/local/armeabi/objs/cta
cd obj
cd local/armeabi/objs/cta
cd fr/razaina/ctatest001
rm -r libs
cp -R libs/ app/src/main/
cd intermediates/dex-cache
cd obj/local/armeabi/objs/
cd cta
rm -R libs
mv jni app/src/main/
adb uninstall fr.razaina.ctatest001
find ~/ -iname "*gnueabi-gcc"
find ~/ -iname "*gcc"
adk
touch ctamod.c
mkdir Android-kernel-source
mv GT-I9305_JB_Opensource.zip Android-kernel-source
cd Android-kernel-source
unzip GT-I9305_JB_Opensource.zip
mkdir GT-I9305_JB_Opensource
mv *.zip *.gz *.txt GT-I9305_JB_Opensource
tar xvf *.gz
ls kernel
sudo find ~/ -iname "*gcc"
cd android-sdks/tools
find . -iname "config.h"
voÃ¹ README_Kernel.txt
vimÃ¹ README_Kernel.txt
find . -iname modules
make Kconfig
cd Yank555
unzip Yank555.lu-SGS3-JB-kernel-v3.2-aroma-I9305_by_ausdim.zip
cd setup
cd Yank555.lu
cd script
cd sub-scripts
mkdir 33
mv Yank555.lu-SGS3-JB-kernel-v3.3-aroma-I9305_by_ausdim.zip 33
cd 33
unzip Yank555.lu-SGS3-JB-kernel-v3.3-aroma-I9305_by_ausdim.zip
tar xvf SGS3-JB-U8-GT-I9305-exp.tar.gz
find . "*.config"
find . -iname "*.config"
find . -iname ".config"
find . -iname "*config*"
vim arch/Kconfig
vim Kconfig
grep -R "CONFIG_ANDROID"
vim README
make ARCH=arm CROSS_COMPILE=/home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/arm-linux-androideabi- modules_prepare
find . -iname cacheflush
find . -iname asm
ls arch/arm/include/asm
find . -iname smc
find . -iname "smc"
grep -R "smc.h"
find . -iname "mach"
make menuconfig
ls *config*
ls *.config*
ls .config
cat .config
make ARCH=arm CROSS_COMPILE=/home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- modules_prepare
cd arch/arm/include/asm
cd mach
ls smc
make --help
make -I ./include ARCH=arm CROSS_COMPILE=/home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- modules_prepare
vim README.md
grep -R "jekyll"
jekyll
sudo jekyll --watch
touch __JEKYLL__
jekyll serve
find . -iname "*tom*"
find . -iname "css"
cd _includes/themes
cd ../assets
cd themes
cd tom
cd css
vim screen.css
cd _includes/themes/tom
vim *.html
sudo apt-get install pandoc
pandoc -s timeline.tex -o cache_attacks.text
vim ./_posts/2015-01-17-cache-timing-attack.md
vi cache_attacks.text
rm ./_posts/2015-01-17-cache-timing-attack.md
cd assets/themes/tom
find . -iname tom
cd _theme_packages/tom/_includes/themes/tom
vim default.html
cd ../.:q
rake theme:install git="htpps://github.com/gayanvirajith/harmony.gits"
rake theme:install git="https://github.com/gayanvirajith/harmony.gits"
rake theme:switch name="harmony"
ls _includes/themes
sudo rake theme:install git="https://github.com/gayanvirajith/harmony.git"
ls _theme_packages/_tmp
rake theme:install git="https://github.com/gayanvirajith/harmony.git"
mv harmony-master.zip harmony
unzip harmony-master.zip
find . -iname "tom"
ls _theme_packages/tom
rm -R _theme_packages/_tmp
mv ~/Downloads/harmony/harmony-master.zip _theme_packages
mv _theme_packages/harmony-master.zip _theme_packages/harmony.zip
mkdir harmony
mv harmony.zip harmony
unzip harmony.zip
rm harmony.zip
mv harmony-master/* .
rm -R harmony-master
bundle install
sudo bundle install
cd ../tom
cp manifest.yml ../harmony
cd ../harmony
vim manifest.yml
sudo chmod -R razaina:razaina .*
sudo chmod -R razaina:razaina *
find . -iname "_config.yml"
jekyll --help
sudo jekyll --help
cd harmony
find . -iname "default"
find . -iname "index"
cd _theme_packages/harmony
cd _includes
find . -iname "*default*"
find . -iname "404*
find . -iname "404*"
vim _theme_packages
rake post title="Cache Timing Attack"
find . -iname "default*"
find . -iname "post*"
vim _layouts/post.html
cd _theme_packages
rake theme:install name="harmony"
y
rake theme:install name="harmony" y
vim _theme_packages/harmony/_config.yml
sudo chown -R razain:razaina *
sudo chown -R razaina:razaina .sass-cache/
find . -iname "sass"
cp faq plop.md
vim _plugins
cp faq.md plop.md
vim plop.md
rm plop.md
rm faq.md
find . -iname "footer.html"
sudo jekyll b
find . -iname "footer"
ddms
adb shell dumpsys badge
adb shell dumpsys com.wssnps
adb shell dumpsys system
adb shell dumpsys meminfo system
adb shell dumpsys meminfo
adb shell dumpsys meminfo | grep cta
adb shell dumpsys meminfo fr.razaina.ctatest002
adb shell dumpsys meminfo fr.razaina.ctatest002 >| mm.txt
adb shell dumpsys meminfo fr.razaina.ctatest002 >| mm2.txt
vim mm2.txt
vim mm.txt
adb shell dumpsys meminfo fr.razaina.ctatest002 >| mm3.txt
vim mm3.txt
cd Share
adb logcat | grep ssl
cd AndroSSL
vim jni/Android.mk
find ~/ -iname "libssl.a"
cdc crackmes
cd Crackme03
hg
hg push
ls apps
cd ChesnutChallenge
cd repository
cd chestnut-challenge
cd bac-a-sable
vim jni/challtwo.cpp
find . -iname "challenge"
sudo find . -iname "challenge"
cd ../../CTATest002
cp ~/Development/chestnut/CTATest001/app/src/main/jni .
cp -R ~/Development/chestnut/CTATest001/app/src/main/jni .
echo "4*2" | bc
bc
echo "3/4" | bc
vim tmp.txt
echo "9/4" | bc
echo "10/4" | bc
echo "320/2" | bc
echo "320/4" | bc
echo "320/6" | bc
echo "16*43" | bc
echo "16*4" | bc
echo "4*43" | bc
echo "320/32" | bc
echo "320/16" | bc
16*8
echo "4*16" | bc
echo "4*8" | bc
echo "320/44" | bc
echo "320/8" | bc
echo "16*8" | bc
echo "320/10" | bc
echo "32/8" | bc
echo "4*4" | bc
find . -iname "cache"
find . -iname "attack"
grep -R "attack"
ls _posts
rm 2014-07-28-welcome-to-jekyll.markdown
vim 2014-08-19-sample-post.markdown
rm 2015-01-17-cache-timing-attack.md
rake post title="Use NDK within Android Studio"
mkdir rijndael
mv rijndael-test.c ../rijndael
cp rijndael-alg-fst.c rijndael-alg-fst.h rijndael-api-fst.c rijndael-api-fst.h ../rijndael
vim rijndael-test.c
vim ../rijndael/rijndael-test.c
cp ../rijndael/rijndael-test.c .
gnuplot plot.txt
gnuplot plot.txt using 1:2 with lines
plot
vim plot.txt
gnuplot plot.txt using 1
mv plot.txt plot.dat
gnuplot plot.dat with lines
vim plot.dat
sudo apt-get remove gnuplot
sudo apt-get install gnuplot
gnuplot plot.dat wl
gnuplot plot plot.dat wl
gnuplot plot.dat plot wl
vim plot.x
gnuplot plot.x
plot exp.dat
sudo apt-get install gnuplot-x11
vim exp.dat
rm plot.dat
rm plot.x
vim data.dat
gnuplot exp.dat with lines
rm exp.dat data.dat
rm tmp.txt
adb pull /data/data/fr.razaina.ctatest002/samples.dat
sudo adb pull /data/data/fr.razaina.ctatest002/samples.dat
adb pull /data/local/samples.dat
mv samples.dat samples_P1K1P1K1.dat
adb pull /data/local/tmp/samples.dat samples_P1K1P2K1.dat
adb pull /data/local/tmp/samples*
adb pull /data/local/tmp/samples_encrypt.P1K1P1K1.dat
adb pull /data/local/tmp/samples_encrypt_P1K1P1K1.dat
adb pull /data/local/tmp/samples_encrypt_P1K1P2K1.dat
rm samples_P1K1P1K1.dat samples_P1K1P2K1.dat
cd workspace
sudo find . -iname "hijack"
sudo find . -iname "hijack*"
cd Moojack
jn
cd com/ul/mobilesec/moojack
cd ~/Gits
cd ~/Gits/adbi/hijack
vim hijack.c
cd app/src
adg logcat -c
diff samples.dat results.dat
vim samples.dat
adb pull /data/local/tmp/samples.dat samples2.dat
adb pull /data/local/tmp/samples3.dat
adb pull /data/local/tmp/samples4.dat
adb pull /data/local/tmp/a.dat
adb pull /data/local/tmp/b.dat
adb pull /data/local/tmp/b.dat c.dat
free --help
man free
sudo sh -c "sync; echo 3 > /proc/sys/vm/drop_caches"
free -m
adb pull /data/local/tmp/meminfo.txt
vim meminfo.txt
mc
make oldconfig
grep -R CONFIG_LOCAL_VERSIOn
grep -R "CONFIG_LOCAL_VERSION"
grep -R "CONFIG"
grep -R "CONFIG" .
grep -R "CONFIG_LOCALVERSION"
adb shell cat /proc/version
grep -R "3.0.31"
grep -R "3\.0\.31"
grep -R "*gcc*"
find . -iname "*gcc*"
find . -iname "*gcc"
find . -inaem "smc.h"
find . -iname "smc.h"
find . -iname "sec_debug.h"
vim kernel/sched.c
vim kernel/printk.c
grep -R "mach/sec_debug.h"
vim kernel/softirq.c
grep -R "<mach/sec_debug.h>"
vim kernel/hrtimer.c
vim kernel/workqueue.c
vim kernel/irq/handle.c n
vim kernel/irq/handle.c
vim build.sh
vim README README_Kernel.txt
grep -R "<mach/map.h>"
vim drivers/char/s3c_mem.c
find . -iname "mach/map.h"
find . -iname "mach\/map.h"
find . -iname "map.h"
vim drivers/char/exynos_mem.c
find . -iname "cpu.h"
vim drivers/char/diag/diagchar_core.c
find . -iname "usbdiag.h"
find . -iname "msm_smd.h"
vim drivers/char/diag/diagchar.h
vim CREDITS
vim MAINTAINERS
find . -iname "_defconfig"
find . -iname "_defconfig*"
find . -iname "defconfig*"
vim include/config/defconfig
tar xvf Platform.tar.gz
cd kernel/gcov
find . -iname "defconfig"
vim include/config/defconfig/list.h
vim README_Kernel.txt
ls arch/arm/boot
make -j8 ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi-
tar xvf Kernel.tar.gz
make ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- clean
make ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- m3_00_defconfig
vim .config
mkdir Android-modules
mkdir Hello-world
find ~/android-ndk-r10d -iname "arm-linux-androideabi-nm"
find . -iname "System.map"
vim System.map
vim scripts/mksysmap
~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi-nm
make ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- LD=$(CROSS_COMPILE)ld.bfd
make LD=$(CROSS_COMPILE)ld.bfd ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi-
make ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi-
make ARCH=arm CROSS_COMPILE=~/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/arm-linux-androideabi- V=1
find . ~/android-ndk-r10d -iname "*armv*"
file arch/arm/boot/compressed/piggy.gzip.o
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- V=1
touch Makefile
cd GT-I9305_JB_Opensource
find . -iname "*tima*"
grep -R . "tima"
grep -R "tima" .
grep -R "trustzone" .
grep -R "verify_module" .
adadb sehll
adb pull /data/local/tmp/modules/boot.img .
adb pull /data/local/tmp/modules/boot.img
adb pull /data/local/tmp/modules/ .
adb pull /data/local/tmp/boot.img
adb pull /data/local/tmp/recovery.img
unzip bootimg_tools.zip
./split_boot
mkdir ../tmp
mv boot.img recovery.img ~/Android-kernel-source/tmp
./split_boot ../tmp/boot.img
vim init.rc
./repack_ramdisk ./boot/ramdisk ramdisk.img
./repack_ramdisk ./boot/ ramdisk.img
./repack_ramdisk
rm ramdisk.img
./repack_ramdisk ./boot/
cd ramdisk
find . -iname "*.gz"
ls boot
ls -al boot
vim d Too
vim repack_ramdisk
./repack_ramdisk ./boot/ newramdisk
cd ../boot
cd boot
ls -al ramdisk
ls -la
rm newramdisk
./repack_ramdisk ./boot/ newramdisk.cpio.gz
./boot_info
sudo chown -r razaina:razaina ../tmp
sudo chown razaina:razaina ../tmp
./boot ../tmp/boot.img
./mkbootimg
vim mkbootimg
./mkbootimg --kernel ../tmp/boot.img --ramdisk newramdisk.cpio.gz -o ../tmp/newboot.img
ls ../tmp/newboot.img
vim boot/ramdisk/init.rc
adb shell reboot bootloader
cmp
cmp ../tmp/boot.img ../tmp/newboot.img
rm ../tmp/newboot.img
vim boot_info
./boot_info ../tmp/boot.img
cp ../tmp/boot.img .
./boot_info ../tmp/boot.img >| bootinfo.txt
vim ~/Android-kernel-source/Tools/bootinfo.txt
calc
cal
cal mardi
cal --help
cal y
cal 1
echo "(4868692 + 2048 - 1) / 2048" | bc
echo "obase=16; ((4868692 + 2048 - 1) / 2048)" | bc
./mkbootimg -base 0x10000000 -pagesize 2048 --kernel_offset 0x10008000 --ramdisk_offset 0x11000000
./mkbootimg --kernel boot.img --ramdisk newramdisk.cpio.gz --base 0x10000000 --pagesize 2048 -o newboot.img
cmp boot.img newboot.img
adb reboot bootloader && fastboot boot newboot.img
adb push newboot.img /sdcard/newboot.img
unzip flash_image.zip
adb push flash_image /data/local/tmp
adb sgell
fastboot
fastboot | grep "devices"
fastboot boot newboot.img
adb sehll
adb push newboot.img /sdcard
adb shell su
adb push ../tmp/recovery.img /data
adb push ../tmp/recovery.img /tmp
adb push ../tmp/boot.img /tmp
fastboot devices
watch fastboot devices
adb sideload
adb sideload --help
adb --help | grep "sideload"
adb sideload ../tmp/recovery.iÃ¹g
ls -am ../tmp
ls -al ../tmp
adb push ../tmp/recovery.img /sdcard
adb push ../tmp/recovery.img /cache
sudo fastboot devices
sudo fastboot
sudo fastboot reboot
lsusb -v | less
sudo fastboot flash recovery ~/Android-kernel-source/tmp/recovery.img
adb reboot bootloader
tar cvf CF-Auto-Root.tar CF-Auto-Rootr
sudo chown root:root *.img
mv CF-Auto-Root ~/
cd ~/
cd CF-Auto-Root
sudo chown root:root cache.img
chown root:root recovery.img
sudo chown root:root recovery.img
tar cvf CF-Auto-Root CF-Auto-Root.tar
sudo tar cvf CF-Auto-Root CF-Auto-Root.tar
tar cvf CF-Auto-Root.tar CF-Auto-Root
sudo tar cvf CF-Auto-Root.tar CF-Auto-Root
cp CF-Auto-Root.tar /media/Share
sudo cp /media/Share
sudo cp CF-Auto-Root.tar /media/Share
cd Tools
mkdir workdir
cd workdir
cp ../../tmp/boot.img .
mkdir META-INF
mkdir META-INF/com
mkdir META-INF/com/google/android
mkdir -p META-INF/com/google/android
cd META-INF/com/google/android
unzip update-binary.zip
rm update-binary.zip
vim ud
vim update-binary
vim updater-script
zip -r custom_flashable_boot_unsigned.zip workdir
java -classpath testsign.jar testsign custom_flashable_boot_unsigned.zip custom_flashable_boot_signed.zip
adb push custom_flashable_boot_signed.zip /tmp
adb shell ls -al /tmp
adb push custom_flashable_boot_signed.zip /sdcard
ls -al *signed
ls -al *signed*
cd ~/Android-kernel-source/Tools
cp ../tmp/boot.img /media/Share
adb sideload custom_flashable_boot_signed.zip
adb push ../tmp/boot.img /sdcard
adb push ../tmp/boot.img /data/media/
ls ../tmp
adb push /media/Share/boot.img /data/media
adb push /media/Share/recovery.img /data/media
adb push flash_image /data/media
adb push newboot.img /data/media
cd ~/ChesnutChallenge
ls Decomp2
cd Decomp2
cd armeabi
adb pull chestnut.challenge.two ~/ChesnutChallenge
find . -iname "*challenge*"
find . -iname "*chestnut*"
cd ChestnutChallengeTwo
vim challtwo.cpp
cat ../ChestnutChallengeOne/jni/Android.mk
grep -R "challtwo"
cd ../../ChestnutChallengeOne
cd ../../ChestnutChallengeTwo
cd Challenges
cd Crypto
cd Chestnut
cd Desktop
cd Development
cd crackmes
ls tmp
cd Gits
cd gotcha
rm -R gotcha
ls sca-android
ls Tutorials
ls workspace
ls workspace/ULChallengeOne
cd ~/workspace/ChestnutChallengeOne
cat Application.mk
cat Android.mk
vim android-config.mk
cd Openssl
vim openssl.version
cd ChestnutChallengeOne
cd ../ChestnutChallengeTwo
cd apps
rm -R .idea
cd Dev
cd ../../Development
cd app
cd main
watch adb shell
adb sshell
ls vbox
cd /media
ls /media/Share/CM*
ls /media/Share/*.zip
adb sideload /media/Share/cm-11-20150125-NIGHTLY-i9305.zip
mv /media/Share/cm-11-20150125-NIGHTLY-i9305.zip /media/Share/update.zip
adb push /media/Share/update.zip /data
cd ~/workspace/
cd ../Development
cd ../workspace
adb push libs/armeabi/ctatest /data/local:tmp
adb push libs/armeabi/ctatest /data/local/tmp
adb logcat -c && adb logcat
mkdir CM
mv update.zip CM
cd CM
unzip update.zip
adb pull /proc/config.gz
cd ~/Android-kernel-source/GT-I9305_JB_Opensource
git clone https://github.com/CyanogenMod/android_kernel_samsung_smdk4412.git
grep -R "arm*_defconfig"
grep -R "arm*_*defconfig"
grep -R "_defconfig"
cd ~/Android-kernel-source/
make config
make defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- defconfig
grep -R "smdk4412"
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- smdk4412_defconfig
cd arch/arm/configs/
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- cyanogenmod_t0lte_defconfig
vi modules.order
find . -iname "*symvers"
cd arm
cd mach-exynos
find . -iname "config
find . -iname "config"
find . -iname "*config"
cd configs
grep -R "gc42"
export LOCALVERSION="-CM-gc426a2f"w
export LOCALVERSION="-CM-gc426a2f"
export LOCALVERSION="-CM-qsdqsdqs"
vim include/config/kernel.release
vim scripts/setlocalversion
export LOCALVERSION="TOTO"
./scripts/setlocalversion --save-scmversion
rm hello.ko
vim ./scripts/setlocalversion
modinfo hello.jo
modinfo hello.kjo
grep -R "setlocalversion"
cat include/config/kernel.release
rm Module.symvers
file hello.ko
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- all
vim hello.c
cd colord
cd arch/arm/mach-exynos
cd include/mach
cd ./configs
vim cyanogenmod_t0lte_defconfig
vim cyanogenmod_i9305_defconfig
vim cyanogenmod_i9300_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi-
ls build
modprobe
modprobe -h
adb pull /system/lib/modules/dhd.ko
modprobe --dump-modversions dhd.ko | grep module_layout
modprobe --dump-modversions dhd.ko
vim arch/arm/boot/compressed/Makefile
make CFLAGS_MODULE=-fno-pic ARCH=arm CROSS_COMPILE=arm-linux-androideabi- modules
modprobe --dump-modversions hello.ko
adb push hello.ko /data/local/tmp
cd website
rake post title="Build Kernel Module for: Samsung Galaxy SIII (GT-I9305)"
vim ./_posts/2015-01-27-build-kernel-module-for-samsung-galaxy-siii-gt-i9305.md
vim _posts/2015-01-22-use-ndk-within-android-studio.md
vim _posts/2014-08-19-sample-post.markdown
cat arch/arm/configs/cyanogenmod_i9305_defconfig
vim arch/arm/configs/cyanogenmod_i9305_defconfig
cd arch/arm/configs
grep -R "3.0.64"
grep -R "i9305
grep -R "i9305"
grep -R "9305"
find . -iname "*9305*"
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- cyanogenmod_i9300_defconfig
vim ../../../Makefile
ls ../../../
modprobe --dump-modversions hello.ko | grep module_layout
modinfo hello.ko
modinfo hello.ko >| plop
mkdir Cycle-counter
cp ../Hello-world/Makefile ../Hello-world/hello.c .
mv hello.c cyclecounter.c
cd CTATest002/app/src/main
rm *.data
rm meminfo.txt
adb pull /data/local/tmp/results.dat
adb pull /data/local/tmp/samples.dat p1k1p1k1.dat
adb pull /data/local/tmp/samples.dat p1k1p2k1.dat
adb pull /data/local/tmp/samples.dat p1k1p2k1_2.dat
adb pull /data/local/tmp/samples.dat p1k1p2k1_3.dat
adb pull /data/local/tmp/samples.dat p1k1p2k1_4.dat
adb pull /data/local/tmp/samples.dat p1k1p2k1_5.dat
rm p1k1p2k1_4.dat p1k1p2k1_5.dat
grep -R "clearcache"
grep -R "clear_cache"
vim armpmu_lib.h
adb push cyclecounter.ko
modprobe --dump-modversions cyclecounter.ko | grep module_layout
sudo apt-get udpate
sudo pat-get update
find . -iname "*cacheflush"
find . -iname "*cacheflush*"
cd platforms/android-19
cd ../android-3
cd arch-arm
vim usr/include/asm-generic/socket.h
vim usr/include/asm/cacheflush.h
find . -iname "miscdevice*"
vim cyclecounter.c Makefile cyclecounter.h
mkdir OLD-MISCDEVICE-FAIL
cp *.c *.h Makefile Module.symvers OLD-MISCDEVICE-FAIL
vim OLD-MISCDEVICE-FAIL/cyclecounter.c
mkdir OLC-MISCDEVICE-FAIL-2
cp cyclecounter.c cyclecounter.h Makefile OLC-MISCDEVICE-FAIL-2
grep -R "CONFIG_MODVERSIONS"
grep -R "CONFIG_MODVERSIONS" .config
adb pull /data/local/tmp/dhd.ko
modprobe --dump-version dhd.ko >| dhd.syms
modprobe --dump-modversions dhd.ko >| dhd.syms
vim dhd.syms
mkdir working-modules
mv dhd* working-modules
adb pull /data/local/tmp/*.ko
adb pull /data/local/tmp/nfs.ko working-modules
cd working-modules
modprobe --dump-modversions nfs.ko >| nfs.syms
vim nfs.syms
adb pull /data/local/tmp/scsi_wait_scan.ko working-modules
mv working-modules scsi_wait_scan.ko
modprobe --dump-modversions scsi_wait_scan.ko >| scsi_wait_scan.syms
vim scsi_wait_scan.syms
grep -R register
adb pull /data/local/tmp/auth_rpcgss.ko
modprobe --dump-modversions auth_rpcgss.ko >| auh.syms
vim auh.syms
grep -R misc
grep -R chrdev
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- clean
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- modules_prepare
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- modules
modprobe --dump-modversions cyclecounter.ko
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi- clean
make ARCH=arm CROSS_COMPILE=arm-linux-androideabi- cyanogenmod_i9305_defconfig
cd app/src/main/app
cd app/src/main/
Ã¹ale
make & adb push cyclecounter.ko /data/local/tmp
make && adb push cyclecounter.ko /data/local/tmp
cd CTATest001/app/src/main/jni
vim cyclecounter.c cyclecounter.h Makefile
cd arch/arm/asm
cd arch/arm/
cd include/asm
adb pull /data/local/tmp/samples.dat
adb pull /data/local/tmp/samples.dat samples-2.dat
adb pull /data/local/tmp/samples.dat samples-3.dat
adb pull /data/local/tmp/samples.dat samples-4.dat.
mv samples-4.dat. samples-4.dat
adb pull /data/local/tmp/samples.dat samples-5.dat
adb pull /data/local/tmp/t3/t3-Jan28_2141.dat
rm *.dat
mkdir t3 t2 t1
touch plot
vim plot
rm plot
chmod +x gen-plot.sh
mv gen-plot.sh
mv t3 gen-plot.sh
cd gen-plot.sh
mv gen-plot.sh t3
mv gen-plot.sh ../
./gen-plot.sh t3 | gnuplot
./gen-plot.sh t3 | gnuplot &
gnuplot << ./gen-plot.sh t3\

display a.png
rm a.png
./gen-plot.sh t3 test1
feh test1.png
rm test1.png
rm t3/*
rm t1/* t2/* t3/*
chmod 777 *
chmod 666 *
../gen-plot.sh t1
./gen-plot.sh t2
./gen-plot.sh t3
cp unfl_attack.pdf /media/Share
okular unfl_attack.pdf&
idaq
string st_unfl_0xFF_param_app001.class
strings st_unfl_0xFF_param_app001.class
strings ATMPMPC.cap
unzip ATMPMPC.cap
cd ATMPMPC
cd javacard
strings *
file Directory.cap
mkdir simple-tests
mv t1 t2 t3 simple-tests
cd simple-tests
mkdir gt1 gt2 gt3
mv simple-tests/* ./
rm -R simple-tests
./gen-plot.sh t1
cd t2
cd ../t1
cd ../t2
cd ../t3
adb pull /data/local/tmp/t3
adb logcat -c
adb push ../libs/armeabi/ctatest /data/local/tmp0
ls gt1/
rm gt1-Jan29_20471422560840.dat gt1-Jan29_20531422561233.dat gt1-Jan29_20551422561300.dat
mkdir notes
cd cnotes
vim Android_Class_SystemClock.txt
rm gt1/* gt2/*
sudo rm gt1/* gt2/*
adb pull /data/local/tmp/gt1
adb pull /data/local/tmp/gt2
easy_install python-graph-core
mkdir Javacard
mv /media/Share/log.txt .
cd /usr/lib/pyshared/python2.6
cd ../python2.7
find . -iname "*gv*"
pip install graphviz
sudo easy_install python-graph-core
sudo easy_install python-graph-dot
sudo pip intall graphviz
sudo pip install graphviz
cd ~/Javacard
python draw-diag.py
sudo pip install pygraphviz
sudo apt-get install graphviz
sudo apt-get install libgraphviz-dev
sudo apt-get purge
sudo apt-get install -y python-pygraphviz
sudo aptget install -y libgraphviz-dev
sudo apt-get install libcdt4 libcgraph5 libgraph4 libgvpr1 libpathplan4 libxdot4
sudo apt-get install -y libgraphviz-dev
find . -iname "*.gv*"
sudo apt-get install libgv-python
sudo apt-get -f install
mv /media/Share/log.xml .
rm log.txt
unzip xmlschematograph-commandline-20080730.zip
cd xmlschematograph-commandline
java -jar XmlSchemaToGraph.jar -o output.dot ../log.xml
cp XmlSchemaToGraph.jar ../
java -jar XmlSchemaToGraph.jar -o a.dot log.xml
java -jar XmlSchemaToGraph.jar -o a.dot "log.xml"
java -jar XmlSchemaToGraph.jar -o a.dot /home/razaina/Javacard/log.xml
java -jar XmlSchemaToGraph.jar -o a.dot "/home/razaina/Javacard/log.xml"
cp log.xml /media/Share
display europe.png
sudo chown razaina:razaina europe.png
feh europe.png
cd /usr/lib/pyshared
cd python2.6
cd ~/Javacard/
cd build
cd pygraphviz
sudo chown -R razaina:razaina ./*
ls /media/Share
sudo apt-get install svn
sudo apt-get install subversion
svn checkout http://python-graph.googlecode.com/svn/trunk/ python-graph-read-only
cd python-graph-read-only
cd cd cor
cd core
cd dot
cd misc
rm -R python-graph-read-only
rm -R -y python-graph-read-only
rm -R python-graph-read-only y
sudo rm -R python-graph-read-only
vim ex1.py
sudo python ex1.py
rm ex1.py
find . -iname "*flush*"
vim arch/arm/mm/flush.c
find . -iname "*cpu_cache*
find . -iname "*cpu_cache*"
cd gt2
vim gt2-Jan29_23301422570634.dat
touch freq.py
vim freq.py
fg$
python freq.py h
python freq.py -h
python freq.py
python freq.py -i gt1/gt1-Jan29_23221422570154.dat
vim gt1/gt1-Jan29_23221422570154.dat
vim distribution.gnu
cd gt1
chmod +x distribution.sh
./distribution.sh gt1/gt1-Jan29_23221422570154.dat
./distribution.sh gt2/gt2-Jan29_23301422570634.dat
./distribution.sh t1/t1-Jan29_19421422556957.dat
./distribution.sh t2/t2-Jan29_19431422556992.dat
jni
./distribution.sh t3/t3-Jan29_19441422557041.dat
feh output.png
killall -9 iceweasel
git clone https://github.com/bilalsammour/DobList
cd ~/Development/chestnut/liveapp-anaylzer-gui
cd fr
cd libvirt-qemu
cd ~/Development/chestnut/DobList
ls DependentLibs
cd Library
cd DobList/
cd com/
cd dobmob/doblist/
cp -r com ~/Development/chestnut/liveapp-anaylzer-gui/app/src/main/java
cd ~/Development/chestnut/DobList/Demo/DobListDemo/src/com/dobmob/doblistdemo
cp FragmentMain.java GenericAdapter.java ItemAdapter.java ~/Development/chestnut/liveapp-analyzer-gui/app/src/main/java/fr/razaina/liveapp_analyzer_gui/
cd DobList/Library
cd DobList
cd src
cp -R com ~/Development/chestnut/liveapp-analyzer-gui/app/src/main/java/
cd liveapp-analyzer-gui
cd app/src/ma
mkdir assets
cp /media/Share/Walkway.zip .
cp Walkway.zip assets
cd assets
rm ../Walkway.zip
mv Walkway.zip fonts
cd fonts
unzip Walkway.zip
rm Walkway.zip
sudo killall -9 android-studio
top
sudo killall -9 java
dmesg
watch dmesg
adb uninstall fr.razaina.live_app_analyzer
./distribution.sh t3/t3-Jan28_23221422483747.dat
./distribution.sh gt2/gt2-Jan29_23311422570704.dat
feh res.png &
cp res.png /media/Share
rm res.png
sudo chown razaina:razaina res.png
sudo python draw-diag.py
cd ~/Development/chestnut
git clone https://github.com/defacto133/MultiLevelExpandableIndentableListView.git
rm -R liveapp-analyzer-gui
rm -R liveapp-anaylzer-gui
adb uninstall fr.razaina.live-app-analyzer-gui
cd notes
vim tests-v1.0.txt
./gen-plot.sh t1/
./gen-plot.sh t2/
cd t3
dc ../
./gen-plot.sh t3/
./gen-plot.sh gt1
./gen-plot.sh gt2
./distribution.sh gt1/
vim distribution.sh gt1/gt1-Jan29_23231422570192.dat
mkdir p13
rm -R *
cp gen-plot.sh single-gen-plot.sh
./single-gen-plot.sh p13/p13-Feb03_18291422984590.dat
./single-gen-plot.sh p13/p13-Feb03_18321422984739.dat
./single-gen-plot.sh p13/p13-Feb03_18321422984744.dat
./single-gen-plot.sh p13/p13-Feb03_18321422984734.dat
./single-gen-plot.sh p13/p13-Feb03_18321422984742.dat
./single-gen-plot.sh p13/p13-Feb03_18321422984746.dat
sudo rm -R *
cp -R ./pt* arc
cp -R pt* arc
cp -R p1* arc
sudo rm p*
../single-gen-plot.sh p13-Feb03_18511422985872.dat
../single-gen-plot.sh p13-Feb03_18511422985887.dat
adb pull /data/local/tmp/p13
rm p13-Feb03_18551422986133.dat
../single-gen-plot.sh p13-Feb03_18481422985729.dat
rm p13-Feb03_18481422985729.dat
adb pull /data/local/tmp/p13/p13-Feb03_18571422986252.dat
../single-gen-plot.sh p13-Feb03_18541422986090.dat
../single-gen-plot.sh p13-Feb03_18551422986104.dat
../single-gen-plot.sh p13-Feb03_18551422986119.dat
../single-gen-plot.sh p13-Feb03_18571422986252.dat
cp single-gen-plot.sh min-max-mean.sh
./min-max-mean.sh gt2/gt2-Jan29_23311422570704.dat
cp min-max-mean.sh std-dev.sh
vim std-dev.sh
./std-dev.sh p13/p13-Feb03_18571422986252.dat
./std-dev.sh p13/p13-Feb03_18551422986119.dat
cp min-max-mean.sh show-me-min-max.sh
./show-me-min-max.sh gt2/gt2-Jan29_23311422570704.dat
./gen-plot.sh p13/p13-Feb03_18551422986119.dat
./single-gen-plot.sh p13/p13-Feb03_18571422986252.dat
./show-me-min-max.sh p13/p13-Feb03_18551422986119.dat
./min-max-mean.sh p13/p13-Feb03_18551422986119.dat
cp min-max-mean.sh correlation-1.sh
./correlation-1.sh p13/p13-Feb03_18551422986119.dat
idaq &
cd /media/Share/javacard/SA-GEM-MEPS-PMPCAtm
cd com/gemalto/PMPCAtm
strings GAA.class
strings ../../../PMPCAtm.cap
unzip PMPCAtm.cap
cd com/gemalto/PMPCAtm/javacard
strings Header.cap
strings Directory.cap
strings Applet.cap
strings ConstantPool.cap
strings Class.cap
strings StaticField.cap
strings RefLocation.cap
strings Descriptor.cap
strings Method.cap
strings --help
file Method.cap
strings -d Method.cap
strings -T java
strings -T java Method.cap
sudo reboot
adb uninstall com.fr.razaina.my_application
cp Android.mk ~/Development/chestnut/live-app-analyzer-gui/app/src/main/jni
find . -iname *.a
find . -iname libxml2.a
find . -iname libxml2.c
find . -iname SAX2.c
find . -iname "arm-linux-gnueabi-*"
cd prebuilt/linux-x86/bin
find . -iname "*gnueabi"
find . -iname "*gnueabi*"
find -R
find -r
find --help
cd share
cd android-arm
cd platforms
cd ../toolchains
cd arm-linux-androideabi-4.9
cd prebuilt
cd linux-x86
cd bin
./configure --host=arm-linux-androideabi- --enable-static --disable-shared
make libxml2.la
cd android-ndk-r10d
grep -R "*libxml*"
ls libxml
cd libxml2/include
cd libxml2
grep -R "*xlmversion.h*"
grep -R "*xmlversion.h*"
grep -R "*xmlversion.*"
find . -iname "*xmlversion*"
vim tre
cd libxml
vim tree.h
vim xmlversion.h.in
cp xmlversion.h.in xmlversion.h
rm libxml2/include/libxml/xmlversion.h
git clone git://git.gnome.org/libxml2
cd libxml2/include/libxml
rm -R libxml2
cp -R /media/Share/libxml2-2.9.2 jni/libxml2
rm -R /media/Share/libxml2-2.9.2
cd libxml2/
vim include/libxml/encoding.h
find . -iname "*iconv*"
vim data.xml
mv app/src/main/jni .
adb push data.xml /data/local/tmp
adb uninstall com.example.razaina.myapplication
cp data.xml /media/Share
cd ../CTATest002
adb lgocat
rm ./*.dat
./gen-plot.sh p13/
./gen-plot.sh
cp min-max-mean.sh avg-them.sh
vim avg-them.sh
vim p13-Feb05_17051423152322.dat
./avg-them.sh p13
vim p13/p13-Feb05_17041423152271.dat
vim p13/p13-Feb05_17041423152295.dat
vim p13/p13-Feb05_17051423152309.dat
paste
man paste
man nawk
paste -d" " p13/*.dat
paste -d" " p13/*.dat >| plop
ls p13
vim p13-Feb05_17041423152271.dat
vim p13-Feb05_17041423152295.dat
vim p13-Feb05_17051423152309.dat
./avg-them.sh p13 >| plop
./avg-them.sh p13 >| p13/AVG.dat
cp timeline.tex test-bernstein.tex
okular test-bernstein.pdf&
pdflatex test-bernstein.tex
vim graph.tex
cp graph.tex ~/Thesis/Cache_Attacks
mv graph.tex graph1.tex
mv graph1.tex graph.tex
mv graph1.tex
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption" "Number of cycles"
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption \w different plaintextsw" "Number of cycles"
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption \w different plaintexts" "Number of cycles"
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption ofw different plaintexts" "Number of cycles"
./gen-plot.sh p13/* "Encryption of different plaintexts" "Number of cycles"
mv graph.eps graph1.eps
mv graph.tex graph1.text
mv graph1.eps graph1.text ~/Thesis/Cache_Attacks
mv graph1.eps graph1.text
cp graph1.eps ~/Thesis/Cache_Attacks
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption of different plaintexts" "Average number of cycles"
./single-gen-plot.sh p13/AVG.dat "Encryption of different plaintexts" "Average number of cycles"
mv graph1.eps graph1.tex ~/Thesis/Cache_Attacks
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption of different plaintexts" "Number of cycles"
mv graph.eps graph.tex ~/Thesis/Cache_Attacks
mv graph.eps graph.tex ~/Thesis/Cache_Attacksls
vi min-max-mean.sh
cp single-gen-plot.sh single-trace-and-avg-line.sh
./single-trace-and-avg-line.sh p13/p13-Feb05_17041423152271.datfg
./min-max-mean.sh p13/p13-Feb05_17041423152271.dat
./single-trace-and-avg-line.sh p13/p13-Feb05_17041423152271.dat
./single-trace-and-avg-line.sh p13/AVG.datfg
fgfg
rm *.aux *.out *.pdf *.toc
rm graph-eps-converted-to.pdf
rm *.pdf
mv p13/AVG.dat .
mv AVG.dat p13
./gen-plot.sh p13/*
vim single-gen-plot.sh
./single-gen-plot.sh p13/AVG.dat
cd p13/
./single-trace-and-avg-line.sh p13/AVG.dat && mv graph2.eps graph2.tex ~/Thesis/Cache_Attacks
mv graph2.eps graph2.tex ~/Thesis/Cache_Attacks
./single-trace-and-avg-line.sh p13/AVG.dat
rm graph2*
rm graph*
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat
rm graph1*
rm *.eps *.tex
./single-trace-and-avg-line.sh p13/AVG.dat "Encryption of different plaintexts" "Avg. number of cycles"
feh graph1.png graph2.png graph3.png
mkdir p13/avg
mv p13/AVG.dat p13/avg
./gen-plot.sh p13/*.dat "Encryption of different plaintext" "Avg. number of cycles"
./gen-plot.sh p13/*w "Encryption of different plaintext" "Avg. number of cycles"
mkdir p13-arc
mv p13/arc p13-arc
mv p13/avg .
./gen-plot.sh p13/* "Encryption of different plaintext" "Avg. number of cycles"
./gen-plot.sh p13w
./gen-plot.sh p13 "Encryption of different plaintext" "Avg. number of cycles"
feh graph3.png
rm output.png
rm *.aux *.out *.pdf *.log *.toc
vim timeline.tex
rm *.toc
mkdir tests
cd tests
vim test001.tex
rm -R tests
rÃ¹m *.png
mv *.eps *.tex ~/Thesis/Cache_Attacks
ls graph2*
ls graph*
mv graph* ~/Thesis/Cache_Attacks
./single-gen-plot.sh p13/p13-Feb05_17041423152271.dat "Encryption of different plaintext" "Avg. number of cycles"
./gen-plot.sh p13 "Encryption of different plaintexts" "Avg. number of cycles"
./single-trace-and-avg-line.sh avg/AVG.dat "Encryption of different plaintexts" "Avg. number of cycles"
mv *.png ~/Thesis/Cache_Attacks
rm *.eps *.tex *.pdf
tar xvf testdisk-7.0-WIP.linux26.tar.bz2
./photorec_static
sudo photorec
sudo photorec_static
mkdir PHOTOREC
cd TianaPhD
cd razaina
find . -iname "timeline*"
sudo find . -iname "timeline*"
cd ~/Downloads/testdisk-7.0-WIP
photorec
cd testdisk-7.0-WIP
touch plop.tex
./fidentify_static plop.tex
./fidentify_static
vim plop.tex
sudo ./fidentify_static
./fidentify_static ~/Thesis/Cache_Attacks/test-bernstein.tex\~
sudo ./photorec_static
vim single-gen-plot.sh single-trace-and-avg-line.log gen-plot.sh
cp test-bernstein.tex\~ test-bernstein.tex
vim timeline.aux
vim timeline.log
vim cache_attacks.text
cd p13
mv p13 p13-1
mkdir p13-2
cd p13-2
./single-gen-plot.sh p13-2/p13-Feb06_16391423237164.dat
./gen-plot.sh p13-2
./single-trace-and-avg-line.sh p13-1
./avg-them.sh p13-2
./avg-them.sh p13-2 >| AVG-2.dat
./single-trace-and-avg-line.sh AVG-2.dat
mkdir images/1
mv *.png images/1
killall -9 android-studi
killall -9 android-studio
mv cyclecounter.c
sudo grep -R . "flush_cache_louis"
sudo grep -R "flush_cache_louis"
sudo grep -R "flush_cache_all"
vim Module.symvers
sudo vim modules.order
sudo vim Module.symvers
cp ~/Android-kernel-source/android_kernel_samsung_smdk4412/Module.symvers .
vim arch/arm/mm/cache-fa.S
vim arch/arm/mm/proc-macros.S
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi- cyanogenmod_idd05_defconfig
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi- cyanogenmod_i9305_defconfig
export PATH=$PATH:/home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin/
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi-
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi- modules_prepare
make -j8 ARCH=arm CROSS_COMPILE=arm-linux-androideabi- modules
mkdir p13-3
cd p13-3
./single-gen-plot.sh p13-3/p13-Feb06_17431423241029.dat
./gen-plot.sh p13-3
./avg-them.sh p13-2 >| AVG-3.dat
vim single-trace-and-avg-line.sh
./single-trace-and-avg-line.sh avg/AVG.dat
./single-trace-and-avg-line.sh AVG-3.dat
mkdir images/2
mv *.png images/2
mkdir p13-4
cd p13-4
./single-gen-plot.sh p13-4/p13-Feb06_17501423241444.dat
./gen-plot.sh p13-4
./avg-them.sh p13-4 >| AVG-4.dat
./single-trace-and-avg-line.sh AVG-4.dat
mkdir p13-5
mkdir images/3
mkdir images/4
ls images
mv *.png images/4
cd p13-5
./single-gen-plot.sh p13-5/p13-Feb06_17561423241788.dat
./gen-plot.sh p13-5
./avg-them.sh p13-5 >| AVG-5.dat
./single-trace-and-avg-line.sh AVG-5.dat
feh graph.png graph1.png graph2.png
feh graph.png graph1.png graph2.png&
feh images/4/* &
feh images/3/* &
ls images/3
ls images/2
feh images/2/* &
mkdir p132-1
./single-gen-plot.sh p132-1/p13-Feb06_18301423243831.dat
./gen-plot.sh p132-1
feh graph1
feh graph1.png
cd p132-1
./avg-them.sh p132-1 >| AVG-p132.dat
./single-trace-and-avg-line.sh AVG-p132.dat
feh graph2.png
mkdir patterns
adb pull /data/local/tmp/patterns/ patterns.dat
smv p132-Feb07_17161423325772.dat ../patterns.dat
cd patterns.dat
mv p132-Feb07_17161423325772.dat ../
rm -R patterns.dat
sudo rm ./*
adb pull /data/local/tmp/patterns/*
mv p132-Feb07_17161423325772.dat patterns.dat
adb pull /data/local/tmp/p13/
./single-gen-plot.sh patterns/p132-Feb07_17161423325772.dat
vim patterns.dat
mv p132-Feb07_17161423325772.dat trace1.dat
rm p132-Feb07_17161423325772.dat
mv p132-Feb07_17251423326304.dat patterns2.dat
vim patterns2.dat
cd ..:
mv p132-Feb07_17281423326511.dat patterns3.dat
vim patterns3.dat
ms p132-Feb07_17511423327869.dat patterns4.dat
mv p132-Feb07_17511423327869.dat patterns3.dat
rm patterns*
vim p132-Feb07_17511423327869.dat
wc -l p132-Feb07_17511423327869.dat
mv p132-Feb07_17511423327869.dat p1.dat
adb pull /data/local/tmp/patterns
mv p132-Feb07_17581423328336.dat p2.dat
vim p2.dat
tail -4096 p1.dat; tail -4096 p2.dat)
(tail -4096 p1.dat; tail -4096 p2.dat)
touch correlate.c
gcc -O3 -o correlate correlate.c
adb push patterns/* /data/local/tmp
adb push patterns/p1.dat /data/local/tmp
adb push patterns/p2.dat /data/local/tmp
vim p1.dat
echo $PATH
gcc -O3 -o correlate correlate.c -lm
gcc correlate.o -o correlate
rm *.o
gcc -c correlate.c
gcc correlate.o -o correlate -lm
gcc -o correlate correlate.c
cd /usr/lib/gcc/i586-linux-gnu/4.7/../../../i386-linux-gnu
find . -iname "libdm*"
find . -iname "*libdm*"
sudo find / -iname "libdm.so"
sudo find / -iname "libm.so"
find . -iname "libm.so"
ld
man ld
gcc -o correlate correlate.c -lm
ldconfig
sudo ldconfig
symlinks
sudo aptitude show libc6
sudo apt-get --force-yes libc6
sudo apt-get --force-yes install libc6
sudo apt-get -t stable install libc6
man apt-get
sudo apt-get -t stable --reinstall install libc6
sudo apt-get --reinstall libc6
sudo apt-get --reinstall install libc6
sudo apt-get --reinstall upgrade
sudo apt-get upgrade
ldd --version
dpkg -l | grep libc6
sudo aptitude reinstall libc6
dpkg --force-downgrade -i libc6_2.13-38+deb7u7_i386.deb
sudo dpkg --force-downgrade -i libc6_2.13-38+deb7u7_i386.deb
sudo apt-get uninstall libc6
sudo apt-get remove libc6
sudo apt-get download libc6
sudo gcc -o correlate correlate.c -lm
sudo apt-get install libc6=2.13-38+deb7u7
cd ~/Development/chestnut/live-app-analyzer-gui/app/src/main
cp ~/Development/chestnut/CTATest002/app/src/main/jni/Android.mk .
mv Android.mk jni
touch socketclient.c
touch example.json
vim ~/Development/chestnut/live-app-analyzer-gui/data.xml
sudo apt-get install sun-java6-jre
sudo apt-get install java
sudo mv jdk-7u75-linux-i586.tar.gz /opt/jdk
cd /opt/jdk
sudo tar xvf *
sudo tar xvf jdk-7u75-linux-i586.tar.gz
sudo update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.7.0_75/bin/java 100
sudo update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.7.0_75/bin/javac 100
sudo update-alternatives --display jaav
sudo update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.7.0_75/bin/java 2000
java
sudo update-alternatives --install /usr/bin/javac javac /opt/jdk/jdk1.7.0_75/bin/javac 2000
sudo update-alternatives --display java
vim example.json
cd ~/Thesis/TianaPhD
cd Papers
dia frame_creation_2_2.dia
sudo apt-get remove dia
sudo apt-get autoclean
sudo apt-get autoremove
sudo apt-get install dia
dia
sudo apt-get install latexdraw
adb push ../libs/armeabi/correlate /data/local/tmp
cd ~/workspace
cd TestOpenSSL
tar xvf openssl-1.0.2.tar.gz
ls compile.sh
find . -iname "*i686-linux-android-gcc*"
find ~/android-ndk-r10d -iname "i686-linux-android-gcc"
cd ~/android-ndk-r10d/toolchains/x86-4.9/prebuilt/linux-x86/bin
./i686-linux-android-gcc
/home/razaina/android-ndk-r10d/toolchains/x86-4.9/prebuilt/linux-x86/bin/i686-linux-android-gcc
cd cd ../
ls sysroot
find . -iname "sysroot"
grep -R "sysroot"
find . -iname "arm-linux-androideabi*"
find . -iname "arm-linux-androideabi-gcc"
find . -iname "setenv*"
find . -iname "*setenv*"
chmod +x Setenv-android.sh
echo $HOME
cd ../android-sdks
./Setenv-android.sh
echo $ANDROID_NDK_ROOT
echo $ANDROID_SDK_ROOT
cd ../android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin
cd /home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/
cd /home/razaina/android-ndk-r10d/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86/bin
ls arm-linux-androideabi-gcc
source Setenv-android.sh*
source Setenv-android.sh
./config shared no-ssl2 no-ssl3 no-comp no-hw no-engine --openssldir=/usr/local/ssl/$ANDROID_API
echo $ANDROID_API
sudo apt-get install libc6-dev
sudo find / -iname "stdlib.h"
ls /usr/lib/ssl
ls /usr/local/ssl
sudo ./config shared no-ssl2 no-ssl3 no-comp no-hw no-engine --openssldir=/usr/local/ssl/$_ANDROID_API
sudo ls /usr/local/ssl
sudo ls /usr/local/ssl/android-14
sudo ls /usr/local/ssl/android-14/man
cd ~/android-ndk-r10d/platforms/android-19/arch-arm/usr
find . -iname "stdlib*"
mv openssl-1.0.2/Setenv-android.sh .
chmod a+x Setenv-android.sh\!
rm Setenv-android.sh\!
chmod a+x Setenv-android.sh
. ./Setenv-android.sh
if [ "$_ANDROID_ARCH" == "arch-x86" ]; then\
export MACHINE=i686\
export RELEASE=2.6.37\
export SYSTEM=android\
export ARCH=x86\
export CROSS_COMPILE="i686-linux-android-"\
fi
perl -pi -e 's/install: all install_docs install_sw/install: install_docs install_sw/g' Makefile.org
echo $_ANDROID_API
./config shared no-ssl2 no-ssl3 no-comp no-hw no-engine --openssldir=/usr/local/ssl/$_ANDROID_API
sudo make depend
chown -R razaina:razaina openssl-1.0.2
sudo chown -R razaina:razaina openssl-1.0.2
make depend
make all
readelf -h libcrypto.a
readelf -h libcrypto.a | grep -i 'class\|machine'
readelf -h libcrypto.a | grep -i 'class\|machine' | head -2
sudo -E make install CC=$ANDROID_TOOLCHAIN/arm-linux-androideabi-gcc RANLIB=$ANDROID_TOOLCHAIN/arm-linux-androideabi-ranlib
sudo ls /usr/local/ssl/
echo ${OPENSSL_ANDROID}
cd CTATest002
mkdir openssl
chmod a+x compile.sh
vul compile.sh
. ./compile.sh server.c
source ~/openssl/Setenv-android.sh
$(CC)
$(cc)
./compile.sh server.c
cat compile.sh
export OPENSSL_ANDROID=/usr/local/ssl/android-19
$(CC) server.c -fPIC -shared -I$(OPENSSL_ANDROID)/include -Wl,-Bstatic -lcrypto -lssl -L$(OPENSSL_ANDROID)/lib -o server -Wl, -Bdynamic
$(cc) server.c -fPIC -shared -I$(OPENSSL_ANDROID)/include -Wl,-Bstatic -lcrypto -lssl -L$(OPENSSL_ANDROID)/lib -o server -Wl, -Bdynamic
echo $(cc)
echo ${CC}
echo ${cc}
cp server.c ../
cd ~/workspace/TestOpenSSL/jni
vim Application.mk
cd /usr/local/ssl/android-19/include
cd ~/openssl/openssl-1.0.2
find . -name libcrypto.a
find . -iname libcrypto
sudo find . -iname libcrypto
sudo find . -iname "libcrypto*"
tmuw
cp openssl/server.c .
sudo cd include
cd ope
sudo ls
sudo chown -R razaina:razaina ssl
cd ssl/android-19/include/openssl
vim ../android-config.mk
cp -R ssl ~/Development/chestnut/CTATest002/app/src/main/jni
ls ssl
ls ssl/android-19
mv ssl/android-19 .
rm -R ssl
mv android-19 ssl-android-19
vim /home/razaina/android-ndk-r10d/build/core/server.c
rm -R ssl-android-19
sudo rm -R ssl-android-19
cd ssl
cd openssl
vim aes.h
find . -iname "lib*"
vim Android.mk server.c
ldd ../libs/armeabi/server
~/androguard
strings ../libs/armeabi/server - grep "lib*"
mv lib/libcrypto.so.1.0.0 .
mv lib/libssl.so.1.0.0 .
mv libcrypto.so.1.0.0 lib
mv libssl.so.1.0.0 lib
mv libcrypto.so.1.0.0 libcrypto.so
mv libssl.so.1.0.0 libssl.so
strings libcrypto.so
rm ../libs/armeabi/*
sudo rm ../libs/armeabi/*
strings ../libs/armeabi/server| grep "libssl"
strings libssl.so | grep "libssl"
ls (al libssl
ls -al libssl
ls libssl.so
sudo ls -al libssl.so
ln -s libcrypto.so libcrypto.so.1.0.0
ln -s libssl.so libssl.so.1.0.0
ls lib
ls -al lib
cd android-19
cd lib
ls -l
adb push ../libs/armeabi/ciphertext /data/local/tmp
find . -iname "*.apk"
adb pull /data/local/tmp/attack .
adb pull /data/local/tmp/attack2 .
adb push ../libs/armeabi/search /data/local/tmp
xrandr
irssi
cd ~/Development/chestnut/
cd Android-modules
vim *.c *.mk *.h
adb push ../libs/armeabi/server /data/local/tmp
cd include
find . -iname "*as*"
find . -iname "*aes*"
vim crypto/aes/aes.h
grep -R "AES_encrypt"
adb push ../libs/armeabi/socketclient /data/local/tmp
cd ~/Development
cd chestnut
vim *.c *.mk
rm fit.log
adb pull /data/local/tmp/result .
fg*
rm result
adb pull /data/local/tmp/study.800 study.800.2
cd ~/openssl
cd openssl-1.0.2
vim Setenv-android.sh
rake post title="Using OpenSSL as a static library within an Android native project"
ls /usr/local/ssl/android-19
f
adb pull /data/local/tmp/study.800 study.800.3
rm -R opro*
vim ../../../../../Android-modules/Cycle-counter/cyclecounter.c
tar xvf security.tar.gz
cd security
cd rijndael
vim COMPILE
vim aesxam.c
vim runme_large.sh
file input_large.asc
vim input_large.asc
cd sha
cd ~/Development/chestnut/live-app-analyzer-gui/icons/api-category
adb pull /data/local/tmp/attack.800 study.800
adb pull /data/local/tmp/attack.800 attack.800
adb pull /data/local/tmp/study.800 study.800
adb pull /data/local/tmp/results .
ssh chestnut@pÃ»lsar.hd.free.fr
mkdir Repos
ssh chestnut@pulsar.hd.free.fr
git clone chestnut@pulsar.hd.free.fr:live-demo-gui
rm example.json
mkdir socketclient
cd socketclient
rm *.apk
mv *.apk ../
mkdir results
mkdir Results
mv results Results
adb pull /data/local/tmp/attack.800 .
adb shell --help
adb --help
adb help shell
adb shell 0123456789ABCDEF
man adb
adb help
adb shell | grep shell
cd Results/
mkdir 1
mv *.800 1
mkdir 2
mkdir Profiles
mv *.profile Profiles
mv Profiles ../
vim distribution.sh
vim avg-them
cp gen-plot.sh display-all-profiles.sh
./display-all-profiles.sh Results/Profiles/*
./display-all-profiles.sh Results/Profiles
./display-all-profiles.sh Results/Profiles/
cp gen-plot.sh extract-profiles.sh
mkdir Results/Profiles/2
vim extract-profiles.sh study.800
sed -n 3,10p study.800
ls Results/Profiles/2
vim Results/Profiles/2/0.profile
vim Results/Profiles/2/15.profile
rm -R Results/Profiles/2/*
sudo rm -R Results/Profiles/2/*
ls fig1.tex
vim fig1.tex
rm fig1.tex
rm study.800
feh stacking.png
mv stacking.png ~/Thesis/Cache_Attacks/
./display-all-profiles.sh Results/Profiles/2
mv stacking.eps ~/Thesis/Cache_Attacks/
rm stacking.png
./display-all-profiles.sh Results/Profiles/2 && mv stacking.eps ~/Thesis/Cache_Attacks
adb pull /data/local/tmp/study.800 .
vim logs
rm -R live-app-analyzer-gui
adb pull /data/app/fr.razaina.live_app_analyzer_gui-3.apk
vim
adb uninstall fr.razaina.liveapp_analyzer_gui
./extract-profiles.sh study.800 Results/Profiles/2
cd Results/2
cd Profiles/2
./display-all-profiles.sh Results/Profiles/2 && mv stacking.eps ~/Thesis/Cache_Attacks/stacking.eps
./display-all-profiles.sh Results/Profiles/2 && mv stacking.eps ~/Thesis/Cache_Attacks/stacking2.eps
./display-all-profiles.sh Results/Profiles/2 && mv stacking.eps ~/Thesis/Cache_Attacks/stacking3.eps
cd ??;
mkdir 3
ls 3
ls 2/
mv *.profile arc
mv 2 arc
rm -R 3
./extract-profiles.sh study.800 Results/Profiles
ls 0
ls 1/
cp extract-profiles.sh extract-all-profiles.sh
./display-all-profiles.sh Results/Profiles/0
./display-all-profiles.sh Results/Profiles/arc/2 stacking
cp stacking.eps ~/Thesis/Cache_Attacks
vim 11.profile
rm -R 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
rm 16 17
vim 16/0.profile
vim 16/10.profile
wc -l
wc -l 12.profile
wc -l 10.profile
wc -l 13.profile
./extract-all-profiles.sh study.800
./extract-all-profiles.sh study.800 >| plop
i=0
if [ $i -eq 0 ] ; then echo "toto"\

if [ $i -eq 0 ] ; then echo "toto"\
fi
if [ $i -eq 0 ] ; then echo "toto" fi\

if [ $i -eq 0 ] ; then echo "toto" ;fi\

if [ $i -eq 0 ] ; then echo "toto" ;f
if [ $i -eq 0 ] ; then echo "toto" ; fi
if [ $(i) -eq 0 ] ; then echo "toto" ; fi
if [ $i) -eq 0 ] ; then echo "toto" ; fi
if [ ${i} -eq 0 ] ; then echo "toto" ; fi
./extract-all-profiles.sh study.800 >| plop && vim plop
cd 17
cd ../12
sed -n 0,256p study.800
sed -n 0,256 study.800
sed -n 1,256 study.800
sed -n 1,256p study.800
./extract-all-profiles.sh study.800 Results/Profiles
./extract-all-profiles.sh study.800 Results/Profiles >| pop
vim pop
wc -l 0.profile
wc -l ../17/15.profile
wc -l ../15/0.profile
wc -l ../16/0.profile
wc -l ../17/0.profile
vim 9.profile
vim ../16/13.profile
vim ../17/13.profile
rm -R 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
./extract-all-profiles.sh study.800 Results/Profiles >| pop && vim pop
./display-all-profiles.sh Results/Profiles/0 veryFirstProfile
mv veryFirstProfile.eps ~/Thesis/Cache_Attacks
./display-all-profiles.sh Results/Profiles/0 veryFirstProfile2
mv veryFirstProfile2.eps ~/Thesis/Cache_Attacks
./display-all-profiles.sh Results/Profiles/0 veryFirstProfile3
mv veryFirstProfile3.eps ~/Thesis/Cache_Attacks
./display-all-profiles.sh Results/Profiles/16 stacking
mv stacking.eps ~/Thesis/Cache_Attacks
./display-all-profiles.sh Results/Profiles/16 stacking2
mv stacking2.eps ~/Thesis/Cache_Attacks
./display-all-profiles.sh Results/Profiles/16 stacking3
mv stacking3.eps ~/Thesis/Cache_Attacks
cp ~/Thesis/Cache_Attacks/test-bernstein.pdf /media/Share
adb pull /data/local/tmp/plop
vim ../../study.800
adb pull /data/local/tmp/attack
vim attack
cd Results/Profiles
rm attack
adb pull /data/local/tmpstudy.800Bis
adb pull /data/local/tmp/study.800Bis
vim study.800Bis
mkdir Results/Profiles/Key0
./extract-all-profiles.sh study.800Bis Results/Profiles/Key0 >| pop && vim pop
wc -l study.800 study.800Bis
sed -n 1,40960p study.800 >| study.800_Truncated
vim study.800_Truncated
adb push study.800_Truncated /data/local/tmp/a
adb push study.800Bis /data/local/tmp/b
adb pull /data/local/tmp/res
vim res
wc -l study.800Bis
rm study.800Bis
rm *Truncated
adb pull /data/local/tmp/study.800Bis attack.800
wc attack.800
sed -n 1,49152p study.800 >| study.8000
wc -l study.800 0
wc -l study.8000
adb push study.8000 /data/local/tmp/a
adb push attack.800 /data/local/tmp/b
vim attack.800
vim study.800 0
vim study.8000
adb pull /data/local/tmp/result
vim result
ls *._ÃÃ
ls *800
rm attack.800 study.800
rm *8000
rm plop pop res result
rm <
rm <\<
rm -R <
rm -R <\
: 1424093351:0;cd <\
: 1424093355:0;cd \<
mkdir tmp
cd tmpd
unzip LaTeXDraw-3.3.1-bin.zip
cd LaTeXDraw-3.3.1
java -jar installer.jar
cd ~/latexdraw
java -jar LaTeXDraw.jar&
adb pull /data/local/tmp/study.800
tail study.800
ls live-app-analyzer-gui
git commit -m
adb pull /data/local/tmp/attack.800
adb push attack.800 /data/local/tmp
mkdir Key0_800
mv study.800 attack.800 results Key0_800
rm fr.razaina.live_app_analyzer_gui-2.apk
cd ~/images
cd 1/
cd
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results
wc -l attack.800
vim study.800
wc -l 15.profile
cd 2
cd Key0_800
adb push results /data/local/tmp
mkdir TimeToPrint
adb pull /data/local/tmp/s.800
sudo vim /etc/apt/sources.list
cp server.c server-flush.c
vim server-flush.c
vim server-flush.c Android.mk
adb push ../libs/armeabi/server-flush /data/local/tmp
adb push ../libs/armeabi/study /data/local/tmp
ls working-modules
cd razaina.fr
cd ~/android-ndk-r10d
find . -iname "armv-7*"
find . -iname "armv7*"
grep -R "cache"
vim platforms/android-19/arch-arm/usr/include/asm/cacheflush.h platforms/android-19/arch-arm/usr/include/asm/cache.h platforms/android-19/arch-arm/usr/include/asm/percpu.h platforms/android-19/arch-arm/usr/include/asm/processor.h
find . -iname "cacheflush.c"
vim include/asm-generic/cacheflush.h
find . -iname cacheflush*
find . -iname "cacheflush*"
find . -iname "cacheflush.S"
vim arch/cris/arch-v32/kernel/cacheflush.S
grep -R "flush_cache*"
grep -R "mcr p15"
vim arch/arm/include/asm/tlbflush.h
grep -R "c7, c7"
vim arch/arm/mm/proc-arm925.S
rake post title="Android kernel module for accessing Cortex-A9's cache memory"
vim ./_posts/2015-02-16-android-kernel-module-for-accessing-cortex-a9s-cache-memory.md
rm
rm study.flush.800
adb pull /data/local/tmp/study.flush.800
adb install live-demo.apk
adb install live-launcher.apk
adb pull /data/app/fr.razaina.live_app_analyzer_gui-1.apk
adb pull /data/app/fr.razaina.live_app_analyzer_gui-2.apk
cd ~/Android-kernel-source
cd android_kernel_samsung_smdk4412
vim arc/arm/mm/
grep -R "performance counter*"
find . -iname "pmu.c"
vim kernel/pmu.c
vim include/asm/pmu.h
vim mvp/mvpkm/coproc_defs.h
grep -R "c9, c12, 0"
cp arch/arm/kernel/perf_event_v7.c ~/Development/chestnut/Android-modules/Cycle-counter
make | grep "Error"
make >| plop
make 2>&1 >|/dev/null | grep -i "Error"
chmod +x compile.sh
grep -R "user mode"
grep -R "c9, c14, 0"
vim arch/arm/kernel/hibernate.c
cd ~/Downloads
ls *.swf
iceweasel *.swf
vim server.c corr.c search.c study.c
vim _posts/2015-02-16-android-kernel-module-for-accessing-cortex-a9s-cache-memory.md
cd website/razaina.fr
vim include/asm/cacheflush.h
vim arch/arm/include/asm/cacheflush.h
vim arch/arm/mm/mmu.c
grep -R "flush_cache_kern*"
grep -R "flush_kern_cache*"
grep -R "cpuc_flush_kern_all"
man dmesg
fg --help
man fg
cd ~/website
razaina.fr
vim about.md
java -jar ~/latexdraw/LaTeXDraw.jar
wc -al study.flush.800
wc -l study.flush.800
adb pull /data/local/tmp/attack.800 attack.flush.800
vim attack.flush.800
adb push study.flush.800 /data/local/tmp/a
adb push attack.flush.800 /data/local/tmp/b
adb pull /data/local/tmp/results
rm -R p13
vim study.flush.800
mkdir ~/Development/chestnut/CTATest002/app/src/main/jni/Results/Profiles/flush
mkdir ~/Development/chestnut/CTATest002/app/src/main/jni/Results/Profiles/flush/KeyRandom
./extract-all-profiles.sh Results/tmp/flush/attack.flush.800 Results/Profiles/flush/KeyRandom
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/Profiles/flush/KeyRandom
./display-all-profiles.sh Results/Profiles/flush/KeyRandom/13 flush1
mkdir graphs
./display-all-profiles.sh Results/Profiles/flush/KeyRandom/13 flush2
./display-all-profiles.sh Results/Profiles/flush/KeyRandom/13 flush3
rm *.eps
./display-all-profiles.sh Results/Profiles/flush/KeyRandom/13 flushBeginning
mv *.eps Results/Profiles/flush/KeyRandom/graphs
cp graphs/*.eps ~/Thesis/Cache_Attacks
ls *.eps
cd Results/tmp/flush
vim results
adb pull /data/local/tmp/results2
vim results 2
vim results2
adb pull /data/local/tmp/results3
vim results3
adb pull /data/local/tmp/results4
tail -8192 attack.flush.800
tail -8192 attack.flush.800 >| rrr
vim rrr
vim results4
adb pull /data/local/tmp/results5
vim results5
adb pull /data/local/tmp/results6
vim results6
vim results *
vim results*
adb pull /data/local/tmp/A
vim A
cd /media/share
cp ~/Thesis/Cache_Attacks/test-bernstein.pdf .
cp ~/Thesis/TianaPhD/Papers/Underflow_Attack_on_Frame_Creation/unfl_attack.pdf .
cd Key0
cd ~/Development/chestnut/CTATest001
rm plop.png
feh graph.png
rm graph.png
cd t1
./distribution.sh gt1/gt1-Jan29_23231422570192.dat
cp distribution.sh distribution-2-cols.sh
mkdir basics
mkdir t1
mv t1-Feb19_14321424352753.dat t1
adb pull /data/local/tmp/t2
mkdir t2
mv t2-Feb19_14331424352805.dat t2
vim extract-profiles.sh
./distribution-2-cols.sh Results/basics/t1/t1-Feb19_14321424352753.dat
./distribution-2-cols.sh Results/basics/t1/t1-Feb19_14321424352753.dat 2
vim min-max-mean.sh
vim Results/basics/t1/t1-Feb19_14321424352753.dat
sort -k1 Results/basics/t1/t1-Feb19_14321424352753.dat | tail
sort -k1 -n Results/basics/t1/t1-Feb19_14321424352753.dat | tail
sort -k1 -n Results/basics/t1/t1-Feb19_14321424352753.dat | head
vim distribution-2-cols.sh
./distribution-2-cols.sh Results/basics/t1/t1-Feb19_14321424352753.dat 1
sort -k1 -n Results/basics/t1/t1-Feb19_14321424352753.dat >| sorted
sort -k2 -n Results/basics/t1/t1-Feb19_14321424352753.dat >| sorted
vim sorted
cat Results/basics/t1/t1-Feb19_14321424352753.dat | awk -v colonne=1 -v largeur=1000 -f hist.awk >| hist_t1
cat Results/basics/t1/t1-Feb19_14321424352753.dat | awk -v colonne=1 -v largeur=10 -f hist.awk >| hist_t12
rm hist_t1 hist_t12
cat Results/basics/t1/t1-Feb19_14321424352753.dat | awk -v colonne=1 -v largeur=1 -f hist.awk >| hist_t1
vim hist_t1
cat Results/basics/t1/t1-Feb19_14321424352753.dat | awk -v colonne=2 -v largeur=1 -f hist.awk >| hist_t2
mkdir t1_avec_t4
cd t1_avec_t4
adb pull t1
cat t1-Feb19_15531424357607.dat | awk -v colonne=3 -v largeur=1 -f hist.awk >| hist_t3
cat Results/basics/t1_avec_t4/t1-Feb19_15531424357607.dat | awk -v colonne=3 -v largeur=1 -f hist.awk >| hist_t3
rm hist_t1 hist_*
mkdir Results/basics/t1t2t3t4t5
cd basics/t1t2t3t4t5
cat Results/basics/t1t2t3t4t5/t1-Feb19_16001424358009.dat | awk -v colonne=1 -v largeur=1 -f hist.awk >| hist_1
cat Results/basics/t1t2t3t4t5/t1-Feb19_16001424358009.dat | awk -v colonne=2 -v largeur=1 -f hist.awk >| hist_2
cat Results/basics/t1t2t3t4t5/t1-Feb19_16001424358009.dat | awk -v colonne=3 -v largeur=1 -f hist.awk >| hist_3
cat Results/basics/t1t2t3t4t5/t1-Feb19_16001424358009.dat | awk -v colonne=4 -v largeur=1 -f hist.awk >| hist_4
mkdir t1t2t3t4t5_sans_if
cd t1t2t3t4t5_sans_if
mv hist_* Results/basics/t1t2t3t4t5
cat Results/basics/t1t2t3t4t5_sans_if/t1-Feb19_16171424359021.dat | awk -v colonne=1 -v largeur=1 -f hist.awk >| hist_1
cat Results/basics/t1t2t3t4t5_sans_if/t1-Feb19_16171424359021.dat | awk -v colonne=2 -v largeur=1 -f hist.awk >| hist_2
cat Results/basics/t1t2t3t4t5_sans_if/t1-Feb19_16171424359021.dat | awk -v colonne=3 -v largeur=1 -f hist.awk >| hist_3
cat Results/basics/t1t2t3t4t5_sans_if/t1-Feb19_16171424359021.dat | awk -v colonne=4 -v largeur=1 -f hist.awk >| hist_4
rm t1-Feb19_16501424361054.dat
adb pull /data/local/tmp/t1
ls hist*
cat Results/basics/t1t8_flush/t1-Feb19_16501424361054.dat | awk -v colonne=1 -v largeur=1 -f hist.awk >| hist_1
rm hist_1
vim Results/basics/t1t8_flush/t1-Feb19_16501424361054.dat
ls ctatest.c
wc -l ctatest.c
vim .ctatest.c.swp
cd app/src/main
find . -iname "*ctatest*"
vim cta.cpp
rm Results/basics/t1t8_flush/t1-Feb19_16501424361054.dat
ls hist_*
adb pull /data/local/tmp/trace trace2
adb pull /data/local/tmp/trace trace3
vim trace3
adb pull /data/local/tmp/trace trace4
adb pull /data/local/tmp/trace trace5
adb pull /data/local/tmp/trace trace6
vim trace6
adb pull /data/local/tmp/trace trace7
vim trace5
vim trace7
cat Results/basics/t1t8_flush/trace7 | awk -v colonne=1 -v largeur=1 -f hist.awk >| Results/basics/t1t8_flush/hist_1
cat Results/basics/t1t8_flush/trace7 | awk -v colonne=2 -v largeur=1 -f hist.awk >| Results/basics/t1t8_flush/hist_2
cat Results/basics/t1t8_flush/trace7 | awk -v colonne=3 -v largeur=1 -f hist.awk >| Results/basics/t1t8_flush/hist_3
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/t1t8_flush
cp server.c cta.c
cd ~/website/razaina.fr
cd _posts
vim ../_layouts/page.html
vim ../pages.html
vim 2015-01-22-use-ndk-within-android-studio.md
vim 2015-01-27-build-kernel-module-for-samsung-galaxy-siii-gt-i9305.md
vim 2015-02-12-using-openssl-as-a-static-library-within-an-android-native-project.md
vim 2015-02-16-android-kernel-module-for-accessing-cortex-a9s-cache-memory.md
vim *.md
rm 2014-08-19-sample-post.markdown
cat _site/mm2.txt
sudo cat _site/mm2.txt
cd _site
rm mm.txt mm2.txt mm3.txt
vim pages.html
vim _layouts/page.html
vim _includes/footer-links.html
vim _includes/social.html
find . -iname "footer*"
vim index.html
vim index.md
vim _includes/JB/setup
ls *.md
vim blog.md
grep -R "Few"
grep -R "<footer"
vim _config.yml
sudo jekyll serve
vim _layouts/default.html
vim _includes/footer.html
ls _site/assets
mkdir _site/images
ls _site
mkdir images
sudo chown -R razaina:razaina *
cd ../;;:
cp distribution.sh display-hist.sh
./display-hist.sh Results/basics/t1t8_flush/hist_1
cd ~/Development/chestnut/app/src/main/jni
./display-hist.sh Results/basics/t1t8_flush/hist_1 "[0:800]"
./display-hist.sh Results/basics/t1t8_flush/hist_1 "[600:800]"
adb pull /data/local/tmp/trace trace8_O0
vim trace8_O0
mkdir Traces_O0
mv trace8_O0 Traces_O0/trace1_O0
cp ../libs/armeabi/ctatest ctatest1
cp ../libs/armeabi/ctatest ctatest2
./idaq &
cd t1t8_flush
cd Traces_O0
adb pull /data/local/tmp/trace trace2_O0_sans_if
vim trace1_O0
cat Results/basics/t1t8_flush/trace7 | awk -v colonne=4 -v largeur=1 -f hist.awk >| Results/basics/t1t8_flush/hist_4
chmod +x create-hist.sh
mkdir Results/basics/t1t8_flush/Traces_O0/hists
mv hists2 hists1
mkdir hists2
rm -R hists1 hists2
mkdir hists1 hists2
./create-hist.sh Results/basics/t1t8_flush/Traces_O0/trace1_O0 Results/basics/t1t8_flush/Traces_O0/hists1
./create-hist.sh Results/basics/t1t8_flush/Traces_O0/trace2_O0_sans_if Results/basics/t1t8_flush/Traces_O0/hists2
cd Results/basics/t1t8_flush/Traces_O0/hists1
vim ctatest.S
ndk-build >| ctatest.S
rm ctatest.S
../
mkdir Traces_OX
adb pull /data/local/tmp/trace trace1_OX_2Barriers
vim trace1_OX_2Barriers
adb pull /data/local/tmp/trace trace1_OX_1Func
cd Results/basics/t1t8_flush
cd Traces_OX
vim trace1_OX_1Func
adb pull /data/local/tmp/trace trace1_OX_4Func
./create-hist.sh Results/basics/t1t8_flush/Traces_OX/trace1_OX_4Func Results/basics/t1t8_flush/Traces_OX
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/t1t8_flush/Traces_OX
sort -k2 -n hist_1
sort -k2 -n hist_1 | tail
chmod +x get-min.sh
su
mkdir FuncO0
mv hist* FuncO0
adb pull /data/local/tmp/trace trace2_O04Func
./create-hist.sh Results/basics/t1t8_flush/Traces_OX/trace2_O0_4Func
./create-hist.sh Results/basics/t1t8_flush/Traces_OX/trace2_O04Func Results/basics/t1t8_flush/Traces_OX
./get-min.sh 2 Results/basics/t1t8_flush/Traces_OX/hist_3
./get-min.sh 2 Results/basics/t1t8_flush/Traces_OX/hist_4
killall -9 xterm
killall -9 tmux
echo "128/4" | bc
echo "128/5" | bc
echo "128/6" | bc
echo "128/8" | bc
echo "32*4" | bc
cd ~/Thesis/TianaPhD/Papers/Underflow_Attack_on_Frame_Creation
cd basics/hits
mkdir basics/hits
cd basics/hits/
./create-hist.sh Results/basics/hits Results/basics/hits
./create-hist.sh Results/basics/hits Results/basics/hits/
wc -l hist_1
./get-min.sh 1 Results/basics/hits/hist_1
./get-min.sh 1 Results/basics/hits/trace
./get-min.sh 2 Results/basics/hits/trace
./get-min.sh 3 Results/basics/hits/trace
./get-min.sh 4 Results/basics/hits/trace
vim Results/basics/hits/trace
./get-min.sh 2 Results/basics/hits/hist_1
./get-min.sh 2 Results/basics/hits/hist_2
./get-min.sh 2 Results/basics/hits/hist_3
./get-min.sh 2 Results/basics/hits/hist_4
./get-min.sh 2 Results/basics/t1t8_flush/Traces_OX/hist_1
./get-min.sh 2 Results/basics/t1t8_flush/Traces_OX/hist_2
vim Results/basics/t1t8_flush/Traces_OX/hist_1
vim get-min.sh
mv get-min.sh get-max.sh
cd ~/Thesis/TianaPhD/Papers
cd Underflow_Attack_on_Frame_Creation
vim unfl_attack.tex
ls trace
ls /Â§*
rm hist*
./display-hist.sh Results/basics/hists/hist_1 "[600:800]"
adb -s 42f7340aeab1af9b shel
adb -s 42f7340aeab1af9b
cd ../jni
rm generate.py
vim xml_gen.c
cd ../app/src/main/jni
chmod +x generate.py
find ~/ -iname "*.py"
vim ~/Javacard/build/pygraphviz/doc/source/conf.py
clear
adb -s 42f7340aeab1af9b shell
cat SocketServerAsyncTask.java
cd ~/Chestnut
cd Repos
cd app/src/main/java/fr/razaina/live_app_analyzer_gui
cp SocketServerAsyncTask.java ~/Development/chestnut/live-app-analyzer-gui/app/src/main/java/fr/razaina/live_app_analyzer_gui
rm plip
sudo python generate.py >| plip
vim plip
vim /etc/profile
ls /usr/lib/jvm
sudo ls /opt/jdk
sudo chown -R razaina:razaina /opt
ls /opt
ls /opt/jdk
sudo update-alternatives --install /usr/bin/java java /opt/jdk/jdk1.7.0_75/bin/java 1
sudo update-alternatives --config java
killall -9 java
vim ~/.bashrc
java -version
vim socketclient.c
adb -s 0123456789ABCDEF shell
sudo python generate.py >| plop
cd java
cd fr/razaina/live_app_analyzer_gui
wc -l SocketServerAsyncTask.java
adb uninstall fr.razaina.live_app_analyzer_gui
wc plop
wc --help
wc -m plop
adb logcat | grep live-app-analyzer-gui
adb -s 0123456789ABCDEF logcat | grep live-app
adb -s 0123456789ABCDEF logcat -c && adb -s 0123456789ABCDEF logcat | grep live-app
git rm live-app-analyzer-gui/app/src/main/jni*.swo
git rm live-app-analyzer-gui/app/src/main/jni/*.swo
adb -s 0123456789ABCDEF forward tcp:2222 tcp:4444
adb -s 0123456789ABCDEF uninstall fr.razaina.live_app_analyzer_gui
git rm live-app-analyzer-gui/app/src/main/jni/.*.swo
cd Results/basics/hits/ls
cd Results/basics/hits/l
cd Results/basics/hits/
mv hist* trace arc
./get-max.sh 2 Results/basics/hits/hist_3
./get-max.sh 2 Results/basics/hits/hist_4
vim hist_4
rm Results/basics/hits/hist*
./create-hist.sh Results/basics/hits/trace Results/basics/hits
./get-max.sh 2 Results/basics/hits/hist_1
./get-max.sh 2 Results/basics/hits/hist_2
./display-hist.sh Results/basics/hits/hist_1 "[600:800]"
./display-hist.sh Results/basics/hits/hist_1 "[600:2000]"
./display-hist.sh Results/basics/hits/hist_1 "[600:3000]"
./display-hist.sh Results/basics/hits/hist_1 "[600:4000]"
./display-hist.sh Results/basics/hits/hist_1 "[600:5000]"
cd ~/Thesis/Cache_Attacks/
./display-hist.sh Results/basics/hits/hist_1 "[600:10000]"
cp hist1.png ~/Thesis/Cache_Attacks
./display-hist.sh Results/basics/hits/hist_1 "[600:100w0]"
./display-hist.sh Results/basics/hits/hist_1 "[600:1000]"
cp hist11.png ~/Thesis/Cache_Attacks
./display-hist.sh Results/basics/hits/hist_1 "[600:800]" hist12
feh hist12.png
cp hist12.png ~/Thesis/Cache_Attacks
./get-max.sh 2 1 1 Results/basics/hits/hist_2
./display-hist.sh Results/basics/hits/hist_2 "[600:10000]" hist2
./display-hist.sh Results/basics/hits/hist_2 "[600:5000]" hist2
./display-hist.sh Results/basics/hits/hist_2 "[600:2000]" hist2
./display-hist.sh Results/basics/hits/hist_2 "[600:1000]" hist2
feh hist2.png
cp hist2.png ~/Thesis/Cache_Attacks
./display-hist.sh Results/basics/hits/hist_2 "[600:500]" hist21
./display-hist.sh Results/basics/hits/hist_2 "[600:800]" hist21
feh hist21.png
./display-hist.sh Results/basics/hits/hist_2 "[600:700]" hist21
cp hist21.png ~/Thesis/Cache_Attacks
./get-max.sh 2 1 1 Results/basics/hits/hist_1
grep trace 668
grep "668" trace
grep "668" trace | wc -l
grep "668 " trace | wc -l
grep "668 " trace
grep "^668 " trace
grep "^668 " trace | wc -l
cat trace | head -10
cat trace | head -10 >| plop
cp test-bernstein.pdf test1.pdf
vim SCORES
grep "51$" trace
grep "40$" trace
grep " 0 " trace
grep " 0 40" trace
grep " 0 40" trace | wc -l
echo "630579/5000" | bc
grep " 0 41" trace | wc -l
grep " 1 41" trace | wc -l
cp extract-all-profiles.sh extract-all.sh
grep " 0 " trace >| offset_0
grep " 1 " trace >| offset_1
cp extract-all-profiles.sh extract-per-offset.sh
rm offset_0 offset_1
vim offset_8
rm offset_8
vim offset_5
vim offset_2
vim offset_4
vim offset_3
grep " 3 " trace | wc -l
grep " 2 " trace | wc -l
grep " 1 " trace | wc -l
grep " 0 " trace | wc -l
mkdir traces_per_offsets
mv offset_0 offset_1 offset_2 traces_per_offsets
rm offset_3 offset_4 offset_5 offset_6
mv traces_per_offsets cache_timing_attack
cp trace cache_timing_attack
rm offset_7
rm *.tar.gz
cp display-hist.sh Results/basics/hits/cache_timing_attack
cp create-hist.sh Results/basics/hits/cache_timing_attack
cp hist_1 hist_2 cache_timing_attack
tar cvf cache_timing_attack.tar.gz cache_timing_attack
tar cvf offset_0 offset_0.tar.gz
tar cvf offset_0.tar.gz offset_0
rm offset_0.tar.gz
wc -l offset_1
rm offset_0
mv offset_* cache_timing_attack
wc -l offset_0
cat trace | head
grep "40$" trace | wc -l
cp extract-per-offset.sh extract-per-nbhits.sh
wc -l offset_3
rm offset_3
./extract-per-offset.sh Results/basics/hits/trace Results/basics/hits 0 8
./extract-per-offset.sh Results/basics/hits/trace
watch ls- al
vim nbhits_90
ls *extract*
mv nbhits_* nbhits
./create-hist.sh Results/basics/hits/nbhits/nbhits_40 Results/basics/hits/nbhits/hists
feh hist11.png
./display-hist.sh Results/basics/hits/nbhits/hists/hist_2 "[0:1000]" hsit11
./get-max.sh 2 1 1 Results/basics/hits/cache_timing_attack/offset_0
grep " 0 40" nbhits_40 >| plop
wc -l plop
./get-max.sh 2 1 1 Results/basics/hits/nbhits/plop
./get-max.sh 2 1 1 Results/basics/hits/nbhits/nbhits_40
./get-max.sh 1 1 1 Results/basics/hits/nbhits/nbhits_40
./get-max.sh 2 1 1 Results/basics/hits/nbhits/hists/hist_1
./get-max.sh 1 1 1 Results/basics/hits/nbhits/hists/hist_2
./get-max.sh 2 1 1 Results/basics/hits/nbhits/hists/hist_2
vim hist_1
mv hists hists40
for i in $(seq 41 90); do mkdir hist$i done
for i in $(seq 41 90) do mkdir hist$i done
chmod +x create-dir.sh
mv hists40 hist40
./create-hist.sh Results/basics/hits/nbhits/nbhits_41 Results/basics/hits/nbhits/hist41
ls hist41
./create-hist.sh Results/basics/hits/nbhits/nbhits_42 Results/basics/hits/nbhits/hist42
./create-hist.sh Results/basics/hits/nbhits/nbhits_43 Results/basics/hits/nbhits/hist43
./create-hist.sh Results/basics/hits/nbhits/nbhits_4
./create-hist.sh Results/basics/hits/nbhits/nbhits_44 Results/basics/hits/nbhits/hist44
./create-hist.sh Results/basics/hits/nbhits/nbhits_45 Results/basics/hits/nbhits/hist45
./create-hist.sh Results/basics/hits/nbhits/nbhits_46 Results/basics/hits/nbhits/hist46
./create-hist.sh Results/basics/hits/nbhits/nbhits_47 Results/basics/hits/nbhits/hist47
./create-hist.sh Results/basics/hits/nbhits/nbhits_47 Results/basics/hits/nbhits/hist48
cd hist43
wc -l hist_2
vim nbhits_43
rm -R hist*
grep " 0 40$" nbhits_40 | wc -l
cp hist.awk Results/basics/hits/nbhits
cd Results/basics/hits/nbhits
ls hist40
wc -l nbhits_43
rm hist40
rm -R hist40
./create-dir.sh
vim offsets/offset_40
rm offsets/offset_40
cat hist.awk
ls nbhits_40
grep " 0 40$" offset_0 >| offset_0_40
wc -l offset_0_40
mkdir hists_offset_0_40
./create-hist.sh offset_0_40 hists_offset_0_40
cd hists_offset_0_40
vim hist_2
./get-max.sh 2 1 1 Results/basics/hits/cache_timing_attack/hists_offset_0_40/hist_2
cd ..//
cp hist.awk Results/basics/hits/cache_timing_attack
rm offset_0_40
ls hists_offset_0_40
rm -R hists_offset_0_40
cd Results/basics/hits/cache_timing_attack
rm offset_0_nbhits_40
mkdir offset_nbhits
mv offset_*nbhits* offset_nbhits
mv hist_1 hist_2 ../
./get-max.sh 2 1 1 Results/basics/hits/cache_timing_attack/offset_nbhits/offset_0_nbhits_40
tar cvf hists.tar.gz hists
tar cvf offset_nbhits.tar.gz offset_nbhits
./display-hist.sh hists/hist_2_off_0_nhits_40 "[0:1000]" hist_2_off_O_nbhits_40
./display-hist.sh hists/hist_2_off_0_nhits_40 "[500:800]" hist_2_off_O_nbhits_40
./display-hist.sh hists/hist_2_off_0_nhits_40 "[500:750]" hist_2_off_O_nbhits_40
./display-hist.sh hists/hist_2_off_0_nhits_40 "[600:750]" hist_2_off_O_nbhits_40
feh hist_2_off_O_nbhits_40.png
ls hist_1
vim hist_2_off_0_nhits_40
cp display-hist.sh hists
chmod +x disp.sh
feh hist_2_off_0_nbhits_53.png
./display-hist.sh
mkdir img
tar img.tar.gz img
tar cvf img.tar.gz img
mv img.tar.gz graphes.tar.gz
ls offset_nbhits
vim offset_0_nbhits_40
feh *
convert
rm -R img/*
sudo rm -R img/*
mv *.png img
cd ~/Development/chestnut/CTATest002/app/src/main
ndk-build clean && ndk-build && adb push ../libs/armeabi/ctatest /data/local/tmp && fg
vim cre
vim offset_nbhits/offset_0_nbhits_40
rm offset_0_nbhits*
mv hists hists2
mkdir hists1
mv hist_1_* hists1
cp hists2/*.sh hists1
cd hists1
./display-hist.sh "[600:800]"
./display-hist.sh "[0:5000]"
killall -9 adb
adb restart
adb | grep restart
adb pull /data/local/tmp/trace trace_offset_1
vim trace_offset_1
mv trace trace_v1
ls *.sh
vim extract-per-nbhits.sh extract-per-offset.sh
./extract-per-offset.sh Results/basics/hits/trace Results/basics/hits
mkdir nbhits
mkdir nbhits2
mv nbhits_* nbhits2
ls nbhits
cd nbhits
cp create-dir.sh hist.awk ../nbhits2
vim create-dir.sh
cp create-hist.sh display-hist.sh ../nbhits2
rm create-dir.sh
./extract-per-nbhits.sh Results/basics/hits/trace Results/basics/hits
vim offset_1
mkdir test2
rm -R test2
cd offset_nbhits
mkdir offsets2
mv offset_* offsets2
cp create-hist.sh ../offsets2
cd ../offsets2
cp ../cache_timing_attack/hist.awk .
watch ls -al
mv offset_* offsets
mkdir hist1 hist2 hist3
mv hist_2* hist2
mv hist_3* hist3
cp display-hist.sh ../nbhits2
cd ../nbhits2
cd offsets2
mv ../nbhits2/display-hist.sh .
ls offsets2
ls nbhits2
cd nbhits2
vim nbhits_40
mv nbhits2 nbhits2_all_offsets_per_nbhits
mv offsets2 Test2
cd hists2
cp display-hist.sh disp.sh ../../Test2
cd ../../Test2
mv display-hist.sh disp.sh hists
cd cache_timing_attack
./create-hist.sh
rm hist_* offset_*
cp extract-per-nbhits.sh extract-per-offset.sh Results/basics/hits/
./extract-per-nbhits.sh trace .
ls Test2
ls Test2/offsets
cd ~/Development/chestnut/Android-modules/
cd ccy
cd Cycle-counter
cd arch/arm/include/asm/cacheflush.h
cd arch/arm/include/asm/
idaq&
~ls
vim hist_1_off_40
vim hist_1_off_44
vim hist2/hist_2_off_40
rm -R hist1/* hist2/* hist3/*
sudo rm -R hist1/* hist2/* hist3/*
cp extract-per-nbhits.sh extract-per-offset.sh Test2
cp Test2/extract* .
./extract-per-nbhits.sh trace Test2
vim offset_07
vim offset_7
ls offset_0
rm offset_0*
mv extract-per-nbhits.sh extract-per-off.sh
mv extract-per-offset.sh extract-per-nbhits.sh
vim extract-per-nbhits.sh extract-per-off.sh create-hist.sh
echo "plop" >| "dqsdqss_dqsdq"
vim dqsdqss_dqsdq
rm dqsdqss_dqsdq
mv trace trace_v2
ndk-build clean && ndk-build && adb push ../libs/armeabi/ctatest /data/local/tmp
adb pull /data/local/tmp/trace trace
touch make.sh
vim *.sh
chmod +x make.sh
mv trace Test2
wc -l hist_*
vim offset_0
rm hist_*
vim hist_1_off_100
rm hist_* nbhits_* offset_*
mv hist_* hists
mv offset_*_nbhits_* offsets
mv hist_1* hist1
mv hist_2 hist2
mv hist_2_* hist2
mv hist_3_* hist3
cd ../off
mv offset_0 offset_1 offset_2 offset_3 offset_4 offset_5 offset_6 offset_7 ../
./display-hist.sh "[600:2000]"
cd img
ls hist_*.png
feh hist_65.png
feh hist_1_off_1_nhits_74.png
feh hist_1_off_1_nhits_73.png
./get-max.sh 1 1 1 Results/basics/hits/Test2/hists/hist1/hist_1_off_0_nhits_100
cd ../hist3
./display-hist.sh "[600:70200]"
mkdir 600_70200
mv *.png 600_70200
mv animated.gif 600_70200.gif
./display-hist.sh "[600:900]"
rm hist1/*.png
mkdir off0 off1 off2 off3 off4 off5 off6 off7
mv hist_1_off_0_* off0
mv hist_1_off_1_* off1
mv hist_1_off_2_* off2
mv hist_1_off_3_* off3
mv hist_1_off_4_* off4
mv hist_1_off_5_* off5
mv hist_1_off_6_* off6
mv hist_1_off_7_* off7
cd off1
rm -R off*
rm -R ./*
sudo rm -R hist2/*
sudo rm -R hist3/*
vim make.sh extract-per-nbhits.sh extract-per-off.sh
rm ./*
sudo rm hist_*_off_* offset_*_nbhits_*
cd hists/hist1
rm nbhits_* offset_*
sudo rm -R ./*
ls off3
ls off4
vim offset_0_nbhits_65
cd ../hist1
cd ../hists
rm *.gif
rm -R off0/*.png
rm -R off1/*.png
rm -R off2/*.png
rm -R off3/*.png
rm -R off4/*.png
rm -R off5/*.png
rm -R off6/*.png
rm -R off7/*.png
rm -R ../hist2/off7/*.png
rm -R off*/*.gif
ls off7
cd hist2
ls off2
sudo rm hist*/off*/*.gi
sudo rm hist*/off*/*.png
sudo rm hist*/off*/*.fig
sudo rm hist*/off*/*.gif
rm \[600:5000\]
rm 6R \[600:5000\]
rm -R \[600:5000\]
find . -iname "*.gif"
sudo rm hist*/off*/*:*/*.png
sudo rm hist*/off*/*:*
./display-hist.sh "[600:5000]"
sudo rm -R hist*/off*/*:*
./display-hist.sh 600 5000
./display-hist.sh 600 1500
./display-hist.sh 600 800 &
mkdir /media/Share/CTA
cp -R * /media/Share/CTA
cp hist1/off0/600_5000/animated.gif ciph1_off0_600_5000.gif
cp hist1/off0/600_1500/animated.gif ciph1_off0_600_1500.gif
cp hist1/off0/600_800/animated.gif ciph1_off0_600_800.gif
cp hist2/off0/600_5000/animated.gif ciph2_off0_600_5000.gif
cp hist2/off0/600_1500/animated.gif ciph2_off0_600_1500.gif
cp hist2/off0/600_800/animated.gif ciph2_off0_600_800.gif
cp hist3/off0/600_5000/animated.gif ciph3_off0_600_5000.gif
cp hist3/off0/600_1500/animated.gif ciph3_off0_600_1500.gif
cp hist3/off0/600_800/animated.gif ciph3_off0_600_800.gif
git remote add origin https://razaina@bitbucket.org/razaina/cta_test2.git
git commit -m 'Initial commit'
cd Javacard
vim draw-diag.py
vi log.xml o
vim log.xml
sudo pip install https://github.com/wandernauta/yuml/zipball/master
yumyuml
yuml
echo "[This]-[Tha]" yuml -s nofunky -o diagram.png
echo "[This]-[Tha]" | yuml -s nofunky -o diagram.png
echo "[A]->[B], [C]->[B], [D]->[B], [E]->[A], [E]->[C]" | yuml -s nofunky -o diagram.png
feh diagram.png
display res.png
feh res.png
grep -R . "mrc"
grep -R "mrc" .
grep -R "mrc p15, 3"
grep -R "mrc p15, 2"
find . -iname "proc-arm*"
vim arch/arm/mm/proc-arm926.S
vim arch/arm/mm/proc-arm920.S
grep -R . "cache miss"
grep -R "cache miss" .
grep -R "cache miss" . | grep "arm"
vim perf_event.c
greop -R "ARMV7_IDX_CYCLE_COUNTER" .
grep -R "ARMV7_IDX_CYCLE_COUNTER" .
grep -R "IDX_CYCLE_COUNTER" .
grep -R "ARMV7_CYCLE_COUNTER" .
vim arch/arm/kernel/perf_event.c
grep -R "hw_perf_envent {" .
grep -R "hw_perf_envent" .
cd ~/Development/chestnut/Android-modules
grep -R "hw_perf_event" .
vim include/linux/perf_event.h
cd ~/Chestnut/Repos/live-demo-gui
git update
adb restart-server
adb start-server
adb kill-server
htop
adb | grep verbose
adb --version
adb version
adb usb
sudo killall -9 dqsdq
sudo killall -9 adb
watch sudo kilall -9 adb
watch sudo killall -9 adb
grep -R "CYCLE_COUNTER" .
grep -R "counter" .
grep -R "ARMV7_" .
grep -R "read_counter" .
grep -R "armv7_pmu_read_counter" .
grep -R "armv7pmu_read_counter" .
grep -R "\.read_counter" .
grep -R "->read_counter" .
grep -R "\->read_counter" .
grep -R "PERF_COUNT" .
grep -R "PERF_COUNT_HW_CPU_CYCLES" .
cd ~/Desktop/oprofile
tar xvf oprofile-1.0.0.tar.gz
cd oprofile-1.0.0
grep -R "REFILL" .
vim events/arm/armv7-common/events
grep -R "L1D_CACHE_REFILL"
grep -R "0x03"
grep -R "index"
grep -R "event_index"
vim libpp/arrange_profiles.cpp
grep -R "CYCLE" .
grep -R "CPU_CYCLE" .
grep -R "struct hw_perf_event" .
grep -R "pmnc_select_counter" .
make | grep error
make clean && make
cp -R live-app-analyzer-gui ~/Development/chestnut/
cd ~/Development/chestnut/live-app-analyzer-gui
./generate.py
sudo python generate.py
cd ~/Chestnut/Repos/live-demo-gui/
find . -iname "*.swp"
rm -R ./*.swp
rm *.swp
ls .*
ls *data
rm .*swp
find . -iname ".*swp"
rm .data.xml.swn .data.xml.swo
rm jni/.Android.mk.swp
rm .*swo
rm .Ã¹swÃ¹
rm plip plip\~ plop
adb
make | grep "error"
g
vim aa
vim ~/Development/chestnut/Android-modules/Cycle-counter/cyclecounter.c
ndk-build clean
mkdir misses
man fflush
mv trace oldTrace
mkdir arch arch/1
mv nhits_* offset_* arch/1/
mv nbhits_* offset_* arch/1/
mv offsets arch/1
mkdir offsets
cp -R hists arch/1
rÃ¹ *.gif img
rm *.gif img
sudo rm -R hist*/off*/600_*
ls off0
sudo rm -R hist*/off*/hist_*
ls hist1/off3
cd ../arch
rm -R hists/*.sh
ls hist2/off2/
ls hist1/off2/
ls hist1/off7/
ls hist2/off7/
ls hist3/off7/
./get-max.sh 1 1 1 Results/basics/hits/Test2/hists/hist1/off1/hist_1_off_1_nhits_100
./display-hist.sh 0 10000 &
./display-hist.sh 800 2000
./display-hist.sh 1400 3000
grep -R "multiplot" .
chmod +x display-cycles-cache-misses.sh
open test.eps
okular test.eps
grep -R "png" .
rm test.eps
./display-cycles-cache-misses.sh
vim ctatest1
cd ../../../../../CTATest002
rm -R hist*/*
sudo rm -R hist*/*
rm oldTrace trace test.png
cd ~/Development/chestnut/CTATest001/app/src/main/jni
cd ../../../../../
cd CTATest002/app/src/main/jni
cd Results/basics/hits/Test2
adb push ../libs/armeabi/ctatest /data/local/tmp
sudo rm -R hists/hist*/*
cd arch/arm/mm
vim proc-arm926.S
git pull
adb push cyclecounter.ko /data/local/tmp/
ab devices
\:q
exit
xrandr --auto --output VBOX1 --mode 1920x1080 --left-of VBOX0
ssh razaina@sherlock
cd /media/Share
scp razaina@sherlock:/home/razaina/Windows7.iso
scp razaina@sherlock:/home/razaina/Windows7.iso .
cd ~/Development/chestnut/live-app-analyzer-gui/app/src/main/jni
vim generate.py
adb logcat | grep live
adb logcat | grep analyzer
adb logcat
cd live-demo-gui
cd live-app-analyzer-gui
find . -iname ".*sw*"
rm -R *.sw*
rm .*sw*
git add *
git add -f
git add -f .
ls ~/Downloads
adb forward tcp:2222 tcp:4444
python generate.py
cp -R ~/Development/chestnut/live-app-analyzer-gui .
rm */.*sw*
git add .
git commit
git push
rm study.*
rÃ¹
rm *~
git init
git remote add origin https://razaina@bitbucket.org/razaina/arm-pmu.git
git add compile.sh cyclecounter.c cyclecounter.h cyclecounter.ko Makefile modules.order Module.symvers perf_event_v7.c
git commit -u "Initial commit"
git commit -m "Initial commit"
git push -u origin amster
git push -u origin master
cd Hello-world
sudo apt-get update
vim Makefile
mkdir PMU-Tests
touch v7_pmu.h
vim vÃ¨
vim v7_pmu.h
cp ../Android-modules/Cycle-counter/Makefile .
gcc -O3 -mtune=cortex-a9 -mfpu=neon -o pmu_matrix pmu_matrix_test.c v7_pmu.S -lm
sudo apt-get dist-upgrade
gcc -O3 -mtune=cortex-a9 -o pmu_matrix pmu_matrix_test.c v7_pmu.S -lm
cd PMU-Tests
mkdir jni
mv Android.mk pmu_matrix_test.c v7_pmu.h v7_pmu.S jni
cd jni
ndk-build
adb shel
adb push ../libs/armeabi/pmu_matrix /data/local/tmp
cd ../Android-modules/Cycle-counter
vim compile.sh
./compile.sh
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/hits
ls ../
ndk-build clean && ndk-build
ls offsets
ls hists/hist2
ls hists/hist2/3
ls hists/hist3
ls hist1 hist2
ls hist1 hist2 hist3
ls img
vim hist_1_off_0_nhits_85
ls off1
rm -R off*/0_432000
rm -R hist*/off*/0_432000
ls hist3
watch ls hist1 hist1 hist3
watch ls hist1 hist2 hist3
ls hist2
./display-hist.sh 0 432000
ls off*
cd 0_432000
feh hist*
rm animated.gif
convert -delay 50 *.png -loop 0 animated.gif
./display-hist.sh 0 100000
./display-hist.sh 0 8000
./display-hist.sh 1000 3000
vim display-cycles-cache-misses.sh
./display-cycles-cache-misses.sh "[0:10000]"
rm test.png
feh test.png &
./display-cycles-cache-misses.sh "[0:432000]"
cd ../offsets
./display-cycles-cache-misses.sh "[0:432000]" nbhits_65 test65
./display-cycles-cache-misses.sh "[0:8000]" nbhits_65 test65
cp display-cycles-cache-misses.sh display-cycles-cachehits-cachemisses.sh
./display-cycles-cachehits-cachemisses.sh "[0:8000]" nbhits_65 test65
./display-cycles-cachehits-cachemisses.sh "[0:20000]" nbhits_65 test65
./display-cycles-cachehits-cachemisses.sh "[0:10000]" nbhits_65 test65
./display-cycles-cachehits-cachemisses.sh "[0:8200]" nbhits_65 test65
feh test65.png
./display-cycles-cachehits-cachemisses.sh "[0:8200]" nbhits_65 test65 && feh test65.png &
./display-cycles-cachehits-cachemisses.sh "[0:8200]" nbhits_65 test65 "Traces with NBHITS = 65 " && feh test65.png &
./display-cycles-cachehits-cachemisses.sh "[0:8200]" nbhits_65 test65 "Case NBHITS = 65" && feh test65.png &
./display-cycles-cachehits-cachemisses.sh "[0:8200]" nbhits_118 test118 "Case NBHITS = 118" && feh test118.png &
feh test65.png&
feh test118.png&
vim study.c
vim rijndael-api-fst.c
vim rijndael-alg-fst.c
./display-hist.sh 1500 3000
./display-hist.sh 1500 1900
./display-hist.sh 1650 1900
vim study.c server.c
vim server.c
okular test-bernstein.pdf &
cp test.png ~/Thesis/Cache_Attacks/pmu_c_ch_cm.png
cp test65.png ~/Thesis/Cache_Attacks/pmu_c_ch_cm65.png
cp test118.png ~/Thesis/Cache_Attacks/pmu_c_ch_cm118.png
vim Android.mk
feh hist.awk
feh hsit11.png
cd 16
rm -R 16 17
ls avg
vim avg/AVG.dat
rm -R avg
ls gt1
rm -R gt1 gt2 gt3
cd p13-1
vi p13-Feb05_17041423152271.dat
rm -R p13-*
rm -R p132-1
cd patterns
vim trace1.dat
rm -R patterns t1 t2 t3 <
rm -R patterns t1 t2 t3 \<
rm -R AVG-*.dat
vim cta.c
rm -R cta.c cta.cpp ctatest1
rm sorted
cd misses
rm -R misses
rm ctatest2
ls 2
rm -2
cd ../2
wc -l study.800
cd Profiles
cd arc
cd tmp
cd TimeToPrint
vim s.800
wc -l s.800
import plop.png
mv plop.png ~/Thesis/Cache_Attacks/aes_src.png
cd ~/Development/chestnut/CTATest002/
mkdir Bernstein
adb pull /data/local/tmp
rm fr.razaina.live_app_analyzer_gui socketclient_g2 socketclient_g3 socketclient_query socketclient_query2
wc -l study.0.400
vim study.0.400
mv study.0.400 study.0.800
cd ../Profiles
../../extract-all-profiles.sh study.0.800 .
cd 1
vim 6.profile
cd ../Profiles/flush/KeyRandom
cd graphs
cd ../../Key0
cd ../../Bernstein
vim 14.profile
vim 3.profile
cd ../0
wc -l *
wc -l */*
vim 0/0.profile
vim 1/0.profile
../../display-all-profiles.sh 9 plop
vim study.0.800
vim 0.profile
cd ../9
vim 15.profile
us
wc -l study.0.800
adb pull /data/local/tmp/attack.K.800
adb push ../libs/armeabi/corr /data/local/tmp
adb pull /data/local/tmp/result*
adb pull /data/local/tmp/results.800
cd ~/Development/chestnut/CTATest002/app/src/main/jni/
vim ctatest;c
gnuplot --persist "1"
gnuplot --persist < "1"
head -500000 bern-timings.txt >| bern-500000.txt
rm bern-500000.txt
head -200000 bern-timings.txt >| bern-200000.txt
head -400000 bern-timings.txt >| bern-400000.txt
grep awk
grep "awk" .
grep -R "awk"
grep -R "awk" .
grep -R "awk" *
cat bern-timings.txt | awk -v colonne=1 -v largeur=1 -f ../../hist.awk >| bern-histo.txt
vim bern-200000.txt
vim bern-histo.txt
wc -l bern-histo.txt
grep -R "box" *
rm bern-400000.txt bern-200000.txt
adb pull /data/local/tmp/bern-timing-2.txt
adb pull /data/local/tmp/bern-timing.txt bern-timings-2.txt
adb pull /data/local/tmp/bern-timings.txt bern-timings-2.txt
cat bern-timings-2.txt | awk -v colonne=1 -v largeur=1 -f ../../hist.awk >| bern-histo-2.txt
adb pull /data/local/tmp/bern-timings.txt bern-timings-3.txt
cat bern-timings-3.txt | awk -v colonne=1 -v largeur=1 -f ../../hist.awk >| bern-histo-3.txt
import k0.800.hist.png
feh k0.800.hist.png
rm k0.800.hist.png
import k0.800.hist-1.png
import k0.800.hist-2.png
import kR.800.hist-1.png
wc -l bern-timings-3.txt
adb pull /data/local/tmp/bern-timings.txt bern-timings-4.txt
cat bern-timings-4.txt | awk -v colonne=1 -v largeur=1 -f ../../hist.awk >| bern-histo-4.txt
import kR.800.hist-2.png
feh k0.800.hist-1.png k0.800.hist-2.png
feh k0.800.hist-1.png&
feh k0.800.hist-2.png&
feh kR.800.hist-1.png&
feh kR.800.hist-2.png&
okular plop_1.eps
adb pull /data/local/tmp/study.0.800 study.0.800.FILTERED
wc -l study.0.800.FILTERED
../../extract-all-profiles.sh study.0.800.FILTERED .
../../display-all-profiles.sh 10 profile.10.study.0.800
okular profile.10.study.0.800_1.eps
okular profile.10.study.0.800_1.eps&
okular plop_1.eps &
adb pull /data/local/tmp/study.0.800 study.0.800.FILTERED.2
rm -R */
../../extract-all-profiles.sh study.0.800.FILTERED.2 .
wc -l study.0.800.2
wc -l study.0.800.FILTERED .2
wc -l study.0.800.FILTERED.2
../../display-all-profiles.sh 11 profile.11.study.0.800
adb pull /data/local/tmp/study.0.800 study.0.800.1400
du -h study.0.800.1400
rm study.0.800.FILTERED *
rm study.0.800.FILTERED*
adb pull /data/local/tmp/attack.KR.800 attack.KR.800.1400
import -window root
feh plop.png
mv ~/plop.png hist_0_800.png
import -window root plop.png
feh hist_KR_800.png
mv ~/plop.png hist_KR_800.png
vim attack.K.800
sort -k4 -n study.0.800.1400 | tail
vim results.800
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/Bernstein
grep -R "png"
vim gen-plot.sh
cd Results/Bernstein
chmod +x display-bern-timings.sh
./display-bern-timings.sh 0 1400 study.0.timings
./display-bern-timings.sh 0 1400 study.0.timings bern-timings.txt
./display-bern-timings.sh 0 1400 study.0.timings-2 bern-timings-2.txt
./display-bern-timings.sh 0 1400 study.KR.timings-1 bern-timings-3.txt
./display-bern-timings.sh 0 1400 study.KR.timings-2 bern-timings-4.txt
feh study.0.timings.png&
rm study.0.timings*
rm study.KR*
rm study.0.timings* study.KR.*
./display-bern-timings.sh 0 1000000 study.0.timings-1 bern-timings.txt
feh study.0.timings-1.png&
./display-bern-timings.sh 0 1000000 study.0.timings-2 bern-timings-2.txt
feh study.0.timings-2.png &
./display-bern-timings.sh 0 1000000 study.0.timings-3 bern-timings-3.txt
./display-bern-timings.sh 0 1000000 study.KR.timings-1 bern-timings-3.txt
rm study.0.timings-3.png
./display-bern-timings.sh 0 1000000 study.KR.timings-2 bern-timings-4.txt
feh study.KR.timings-1.png &
feh study.KR.timings-2.png &
feh k0.800.hist-1.png
rm k0.800* kR.800*
feh hist_0_800.png
cp hist_0_800.png hist_KR_800.png study.0.timings-*.png study.KR.timings-*.png ~/Thesis/Cache_Attacks
ls *.png
mv study.0.timings-1.png study_0_timings_1.png
mv study.0.timings-2.png study_0_timings_2.png
mv study.KR.timings-1.png study_KR_timings_1.png
mv study.KR.timings-2.png study_KR_timings_2.png
cp test-bernstein.pdf /media/Share
cd ~/Development/chestnut/CTATest002
cd app/src/main/jni
mkdir flush-ccm-ch-o
adb pull /data/local/tmp/study.0.800.test-timings .
adb pull /data/local/tmp/ch-cm-ovlf.txt
vim ls
voÃ¹ study.0.800.test-timings
vim study.0.800.test-timings
cd Results/basics
feh bern-timings.txt
./display.sh 0 1000000 bern-timings bern-timings.txt
vim display-bern-timings.sh
vim ../../extract-per-nbhits.sh
vim ../../display-hist.sh
./display.sh bern-timings.txt bern-timings 0 1000000
feh bern-timings
mv bern-timings bern-timings.png
wc -l bern-timings.png
rm bern-timings.png
vim ../../display-all-profiles.sh
vim ch-cm-ovfl.png
rm ch-cm-ovfl.png
vim ch-cm-ovlf.txt
mv ch-cm-ovlf.txt ch-cm-ovfl.txt
feh bern-timings.png&
feh ch-cm-ovfl.png&
vim ch-cm-ovfl.txt
feh ch-cm-ovfl.png
killall -9 gnuplot
./display.sh 0 1000000
wc -l bern-timings.txt
./display.sh 0 3069635
vim Results/basics/flush-ccm-ch-o
cd Results/basics/flush-ccm-ch-o
vim server.c study.c
feh study.0.timings-1.png
feh study.0.timings-2.png
cd ~/Thesis/Cache_Attacks
adb pull /data/local/tmp/bern-timings.txt
du -h bern-timings.txt
vim bern-timings.txt
mkdir flush
cd flush
adb pull /data:local/tmp/study.400
adb pull /data:local/tmp/study.400.flush
adb pull /data/local/tmp/study.400.flush
vim study.400.flush
rm study.400.flush
cd 9
sl
cd flush-ccm-ch-o
cd ~/ida-6.7
./idaq&
cd ~/Qcom_Test
cd huawei
cd AMSS
vim *.c *.h
cd nv
grep -R "diag_task"
grep -R "diag_task_handler"
grep -R "DIAG_TASK"
vim MSM3000/DIAG.c
grep -R "DIAG_MAX_F"
feh traces
feh traces.png
ls t1
rm -r t1 t1_avec_t4 t1t2t3t4t5 t1t2t3t4t5_sans_if t1t8_flush/ t2
cd Bernstein
vim rijndael-alg-fst.c rijndael-alg-fst.h rijndael-api-fst.c rijndael-api-fst.h
cd HISTFILE
ls hist1
ls hist1/0
./display-hist.sh 0 500000
./display-hist.sh 0 10000
./display-hist.sh 500 2000
feh test118.png
vim nbhits_0
vim nbhits_65
cd hits/Test2
cd offsets
vim offset_0_nbhits_100
vim offset_1_nbhits_82
vim nbhits_100
vim offsets/offset_0_nbhits_100
ls hists/hist1
watch ls . off*/*
cd off0/
watch ls . off*
cd ../off1/real_misses
rm hist*/*/*.png
rm 1600_2000
rm -R 1600_2000
cd off1/real_misses
rm hist*/*/*/.png
rm hist*/*/*/*.png
watch ls real_*
watch ls real_misses
vim hist_1_off_0_nhits_100_real_misses
cd hist1/off0/real_hits
feh hist_1_off_0_nhits_65_real_hits.png
vim make
cd real_misses
./display-hist.sh 1600 2000
cd hists/
cd 1600_2000
wc -l hist_1_off_0_nhits_*
ls real_misses
watch s
watch ls
ls 0_9000
./display-hist.sh 0 9000
cd 0
cd 0_9000
ls *.gif
feh animated.gif
vim disp-real-hits.sh
cp disp-real-hits.sh disp-real-misses.sh
vim disp-real-misses.sh
chmod +x disp-real-hits.sh disp-real-misses.sh
./display-hist.sh 0 2000
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/hits/Test2
ls real_hits/0_2000
rm hist*/off*/*/*.gif
rm hist*/off*/*/*.png
rm -R hist*/off*/0_2000
rm -R hist*/off*/real_hits/0_2000
./display-hist.sh 900 2000 0 1000
rm -R hist*/off*/real_misses/0_2000
rm hist*/off*/*/*/*.gif
rm hist*/off*/*/*/*/*.png
rm hist*/off*/*/*/*.png
rm -R ../../hist*/off*/900_2000
rm -R ../../hist*/off*/real_*/900_2000
cd 900_2000
vim ../../../display-cycles-cachehits-cachemisses.sh
rm -R 900_2000
./display-hist.sh 900 2000 0 800 0 800
feh trace_off_0_nbhits_100.png
rÃ¹ *.png
watch ls *.png
./display-hist.sh 1600 2000 350 400 90 190
grep -R "flush"
grep -R "flush_cache"
vim arch/arm/include
cd arch/arm/include
cd asm
find *cache*
vim cacheflush.h
vim cache.h
vim arch/arm/mm/cache-v7.S
grep -R "flush_dcache_all"
find . -iname "exynos"
grep -R "flush data cache"
grep -R "cache_flush_kern_all"
vim arch/arm/kernel/sleep.S
grep -R "CACHE_FLUSH_KERN_ALL"
vim arch/arm/asm/
cd arch/arm
cd kernel
vim pmu.c
feh test.png&
vim ctatest.c
mkdir Test3
cp *.sh ../Test3
vim extract-per-nbhits.sh
vim extract-per-off.sh
cp hist.awk ../Test3
cd ../Test3
cd ../Test2
cp *.sh ../../Test3
cd ../../Test3
mv display-hist.sh disp-real-hits.sh disp-real-misses.sh disp.sh hists
vim hist_1_off_0_nhits_66_data_reads
cd data_writes
cd ../data_reads
grep -R "653"
./disp.sh 0 10000 1 5000 2 30000 3 4555 4 666fg
./disp.sh 0 10000 1 5000 2 30000 3 4555 4 666
cd all
rm ./*/*/*/*/*.png
rm ./*/*/*/*.png
rm ./*/*/*.png
rm ./*/*.png
rm ./*.png
./display-hist.sh 0 1000 0 10000 0 10000 0 10000 0 10000
./display-hist.sh 0 200 0 200 0 200 0 200 0 200
./display-hist.sh 0 2000 0 2000 0 2000 0 2000 0 2000
killall -9 display-hist
rm -R hist*/off*/all
ls data_reads
ls data_writes
ls real_hits
cd .././
./display-hist.sh 0 250 250 500 0 250 0 100 0 100
./display-hist.sh 100 150 350 400 100 150 60 70 60 70
./display-hist.sh 120 145 3450 380 100 125 60 70 60 70
cp *.sh *.awk ../Test4
ls hists
cp hists/*.sh ../Test4/hists
rm nbhits_*
rm offset_*
adb pull /data/local/tmp trace
rm -R trace
ls hist1/off0
./display-hist.sh 120 145 345 380 100 125 60 70 60 70
./display-hist.sh 0 1000 0 1000 0 800 0 800 0 800
mkdir Test5
cd Test5
cp *.sh *.awk ../Test5
mkdir ../Test5/hists
cp hists/*.sh ../Test5/hists
cd ../Test5
./display-hist.sh 0 10000 0 10000 0 8000 0 8000 0 8000
./display-hist.sh 2000 3000 0 1000 0 800 0 800 0 800
./display-hist.sh 2000 3000 0 1000 0 800 100 200 100 200
rm -R Test4 Test5
dhclient eth0
dhclient
dhclient --help
service dhcp restart
service dhclient restart
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/flush-ccm-ch-o
cd ..
mkdir Test4
cp ../Test3/*.sh .
mkdir hists
cp ../Test3/hists/*.sh hists
./make
cp ../Test3/*.awk .
cd ~/Development/chestnut/Android-modules/Cycle-counter
cd ../../CTATest002/app/src/main/jni
cd Results
cd basics
cd hits
cd Test4
./display-hist.sh 0 10000 0 10000 0 10000 0 10000 0 10000
./display-hist.sh 1500 4000 100 500 100 500 100 500 100 500
./display-hist.sh 1500 4000 300 400 80 150 0 900 0 900
./display-hist.sh 1500 4000 330 400 100 140 0 100 0 100
./display-hist.sh 1500 4000 330 400 100 140 0 100 40 80
./display-hist.sh 1500 4000 330 400 100 140 0 80 0 80
./display-hist.sh 1500 4000 330 400 100 140 30 80 30 80
grep -R "event"
grep -R "events"
grep -R "DREAD"
cd arch/arm/kernel
vim perf_event_v7.c
l
cd offÂ°
vim disp.sh
./display-hist.sh 1500 4000 330 400 100 140 50 80 50 80
./display-hist.sh 1500 4000 330 400 100 140 0 800 50 80
./display-hist.sh 1500 4000 330 400 100 140 200 400 50 80
./display-hist.sh 1500 4000 330 400 100 140 275 310 50 80
./display-hist.sh 1500 4000 330 400 100 140 285 300 50 80
./display-hist.sh 1500 4000 330 400 100 140 285 320 50 80
./display-hist.sh 1500 4000 330 400 100 140 285 315 50 80
./display-hist.sh 1500 4000 330 400 100 140 285 308 50 80
./display-hist.sh 1500 4000 330 400 100 130 285 308 50 80
cd data_reads
vim hist_1_off_0_nhits_100_data_reads
cd ../../../
cd hist1
cd off0/real_hits
vim ../hist.awk
cd hists/hist1/off0/real_hits
cd hist1/off0/
cat hist_1_off_0_nhits_65_real_hits | awk -f ../../../../avg.awk
cat hist_1_off_0_nhits_100_real_hits | awk -f ../../../../avg.awk
chmod +x avg-real-hits.sh
cat hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits | awk -f ../avg.awk
cd ../../../../
vim ctatest.c v7_pmu.S armpmu_lib.h
ls hist1/off0/real_hits/hist_1_off_0_nhits_116_real_hits
cd hist1/off0
cd real_hits
sort -k2 -n hists/hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits | tail
[A
sort -k2 -n hists/hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits | tail -1
vim hist_1_off_0_nhits_100_real_hits
sort -k2 -n hists/hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits | tail -1 | awk '{print $1}'
vim avg-real-hits.sh
./avg-real-hits.sh >| max_of_each_nbhits
vi max_of_each_nbhits
vim max_of_each_nbhits
awk 'FNR==NR{a[$3]=$0;next}{if(b=a[$3]){print b;print}}' hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits
vim display-hist.sh
cat max_of_each_nbhits | awk -v colonne=3 largeur=1 -f ../hist.awk
cat max_of_each_nbhits | awk -v colonne=3 -v largeur=1 -f ../hist.awk
rm max_of_each_nbhits
w
vim trac
head -10 trace
awk '{if($1 < 2000)  print}' trace
mv trace original_trace
awk '{if($1 < 2000)  print}' original_trace >| trace
wc -l trace
wc -l original_trace
vim hist1/off0/real_hits/hist_1_off_0_nhits_100_real_hits
./avg-real-hits.sh >| plop
vim hist1/off0/real_hits/all_merged_hists
rm hist1/off0/real_hits/all_merged_hists
grep -R -l "355" hist1/off0/real_hits
cd hist1/
cd off0
vim hist_1_off_0_nhits_100
vim ../create-hist.sh
./avg-real-hits.sh
awk -v val=366 '{if($36 == $val) print}' trace
cd ~/Development/chestnut/CTATest002/app/src/main/jni/Results/basics/hits/Test4
cat trace | awk -v val=366 '{if($36 == $val) print}'
cat trace | awk -v val=366 '{if($36 == $36) print}'
cat trace | awk -v val=366 '{print $36}'
cat trace | awk -v val=366 '{if($36 = $val) print}'
cat trace | awk -v val=366 '{if($36 == 366) print}'
vim hist.awk
vim filtered_366
vim make.sh
mv trace trace
mv trace _trace
mv filtered_366 trace
./make.sh
./display-hist.sh 1500 4000 330 400 100 130 285 310 50 80
./display-hist.sh 1500 2000 330 400 100 130 285 310 50 80
mv _trace trace
cat trace | awk '{if($36 == 366) print}' >| filtered_366
cat filtered_366 | awk '{print $1}' >| nb_cycles_366
cat filtered_366 | awk '{print $37}' >| nb_misses_366
cp display-cycles-cachehits-cachemisses.sh display-filtered.sh
cat results
cat filtered_366 | awk '{printf("%u %u\n", $1, $37)}' >| results
wc -l results
rm results
cat filtered_366 | awk '{print $1" "$37}' >| results
gnuplot
vim display-filtered.sh
cat trace | awk '{if($36 == 350) print}' >| filtered_350
cat filtered_350 | awk '{print $1" "$37}' >| results
vim create-hist.sh
cat trace | awk -v colonne=36 -v largeur=1 -f hist.awk >| aaaa
vim aaaa
sort -k1 -n aaaa | tail -1
sort -k2 -n aaaa | tail -1
cat trace | awk '{if($36 == 362) print}' >| filtered_362
cat filtered_362 | awk '{print $1" "$37}' >| results
./display-filtered.sh
feh filtered.png
vim filtered_350
vim filtered.sh
chmod +x filtered.sh
./filtered.sh 320
./filtered.sh 366
mkdir Test_no_aes
mkdir Test_empty_aes
mkdir Test_with_aes
adb pull /data/local/tmp/trace_empty_aes Test_empty_aes
adb pull /data/local/tmp/trace_with_aes Test_with_aes
s
vim trace_no_aes
vim Test_with_aes/trace_with_aes
adb pull /data/local/tmp/trace_no_aes Test_no_aes
adb pull /data/local/tmp/trace_no_aes_2 Test_no_aes
mv trace_no_aes trace_no_aes_1
mv trace_no_aes_1 ../Test_empty_aes/trace1
mv trace_no_aes_2 ../Test_empty_aes/trace2
cd Test_empty_aes
rm trace_empty_aes
rm *
sudo rm trace1 trace2
cd hists
cd Test3
vim display-cycles-cachehits-cachemisses.sh
cp Test2/hist.awk ../
mv ../hist.awk .
grep -R "colonne"
vim Test2/display-cycles-cachehits-cachemisses.sh
grep -R "w b"
feh trace1
feh trace1_hist.png
vim trace1_hist_nbcycles
rm trace1_hist*
feh trace1_hist.png&
grep -R "cut"
grep -R "cut "
cut
cd Test_no_aes/o
cd Test_no_aes/
rm hist1 hist2 hist3 hist4 hist5 *.png
sort -k2 -n hist1
grep -R "sort" ../
grep -R "sort"
sort -k2 -n hist1 | head
sort -k2 -n hist1 >| plop
vim plop
feh hist.png &
rm plop
feh hist1.png hist2.png &
rm hist1 hist2 hist3 hist4 hist5
cp *.sh ../Test_with_aes
feh ../Test_no_aes/hist1.png&
feh ../Test_no_aes/hist2.png&
feh ../Test_no_aes/hist1.png ../Test_no_aes/hist2.png&
feh ../Test_empty_aes/hist1.png
mv hist.png hist1.Png
mv hist1.Png hist1.png
ls ../Test_with_aes
feh Test_no_aes/*.png&
feh Test_empty_aes/*.png&
feh Test_with_aes/*.png&
cd Test_with_aes
feh *.png
rm trace_with_aes
feh trace1.png
vim trace2
feh trace2.png
./display.sh trace2 0 10000
rm hist*.png
feh hist1.png
feh hist1.png&
./display.sh trace1 0 10000
rm hist1.png
cp *.sh ../Test_no_aes
cp *.sh ../Test_empty_aes
feh Test_no_aes/hist*.png&
vim hist1.png
./display.sh trace1
./display.sh trace2
cd Test_no_aes
cd ../Test_empty_aes
cd ../Test_with_aes
mkdir Test_precise_measures
cd Test_precise_measures
cp ../Test_no_aes/*.sh .
feh hist*.png &
cd ../Test_no_aes
mkdir arc
mv *.png arc
mkdir arc2
mv *.png arc2
vim Development/chestnut/Android-modules/Cycle-counter/cyclecounter.c
cd Development/chestnut/Android-modules/Cycle-counter
make clean
make
adb push cyclecounter.ko /data/local/tmp
grep -R "overflow flag"
grep -R "has_overflowed"
vim arch/arm/kernel/perf_event_v7.c
python
vim trace1
rm trace1 trace2
ls arc2
mkdir arc_unroll
mv trace1 trace2 *.png arc_unroll
ls SCORES
ls SCORES*
mv SCORES SCORES_NEW
mv /media/Share/SCORES.txt SCORES
mkdir unroll_0_40
mv *.png trace* unroll_0_40
ls unroll_0_40
feh unroll_0_40/trace1.png
mkdir unroll_0_60
mkdir unroll_0_80
mv *.png trace* unroll_0_60
mv *.png trace* unroll_0_80
feh unroll_0_40/hist*.png&
feh unroll_0_60/hist*.png&
feh unroll_0_80/hist*.png&
mkdir unroll_0_80_2
mv *.png trace* unroll_0_80_2
feh unroll_0_80_2/hist*.png&
mkdir unroll_0_60_2
./display.sh trace1 && mv hist.png hist1.png && ./display.sh trace2 && mv hist.png hist2.png
wc -l hist1
feh trace1.png&
mv *.png trace* unroll_0_60_2
feh unroll_0_60_2/hist*.png&
ls arc
feh cache_timing_attack/hist_2_off_O_nbhits_40.png
ls cache_timing_attack
rm -R cache_timing_attack
feh test.png
cd arch
ls 1
rm -R arch
cd Test2
cd ~/Thesis
cd Cache_Attacks
vim test-bernstein.tex
cd hists/hist1/off0/all
cp trace_off_0_nbhits_60.png trace_off_0_nbhits_80.png ~/Thesis/Cache_Attacks
cp trace_off_0_nbhits_65.png trace_off_0_nbhits_80.png ~/Thesis/Cache_Attacks
cp trace_off_0_nbhits_65.png trace_off_0_nbhits_118.png ~/Thesis/Cache_Attacks
ls ../libs
ls ../libs/armeabi
cfg
mkdir Test_bench
vim trace
chmod +x display.sh
./display.sh && feh trace &
cp ../hist.awk .
cp hist.sh ../Test_bench
feh trace.png
./display.sh && feh trace.png
vim hist1
vim hist2
vim hist3
adb devics
watch adb devices
vim bench.c
cd Results/basics/hits
cd Test_bench
mkdir optimized
mkdir non-optimized
adb pull /data/local/tmp/trace1
mv trace1 trace
mv hist.png hist1.png
adb pull /data/local/tmp/trace2
mv trace.png trace1.png
mv trace2 trace
mv hist.png hist2.png
mv trace.png trace2.png
feh trace*.png&
mv *.png optimized
rm trace
mkdir non-optimized-rand-jump32
feh hist.png&
rm *.png trace
cd ~/Development/chestnut/Android-modules/Cycle-counter/
vim cyclecounter.c
adb pull /data/local/tmp/trace
feh hist*.png&
cp hist.png /media/Share
adb devices
adb shell
sudo mount -t vboxsf -o uid=$UID,gid=$GID,umask=0 Android /media/Share
mkdir Test_1000
cd Test_1000
cd ~/Development/chestnut/CTATest002/app/src/main/jni
mv /media/Share/data_* .
ls data*
adb pull /data/local/tmp/trace_*
cd ../Test_precise_measures
cp display.sh hist.sh ../Test_1000
cd ../Test_1000
./display.sh
./display.sh trace_50
feh hist.png
vim hist.sh
mv hist.png hist_50.png
./display.sh trace_60
mv hist.png hist_60.png
./display.sh trace_70
mv hist.png hist_70.png
./display.sh trace_80
mv hist.png hist_80.png
feh hist_50.png&
feh hist_60.png&
feh hist_70.png&
feh hist_80.png&
vim data_50 SCORES
vim data_50
rm *.png
rm trace*
sed -n 1,1000p trace_50 >| trace_50_0
rm trace_50_0
vim display-all-profiles.sh
grep -R "for"
grep -R "seq"
vim extract-all-profiles.sh
vim display.sh
vim display-per-offsets.sh
vim trace_50
chmod +x display-per-offsets.sh
./display.sh trace_0_60
./display.sh trace_0_70
cd ~/Android-kernel-source/android_kernel_samsung_smdk4412
tmux
find . -iname "*cache*"
vim arch/arm/mm/cache-l2x0.c
mkdir wo_outer_cache_flush_all
mv *.png wo_outer_cache_flush_all
rm trace_*
adb pull /data/local/tmp/trace_50
adb pull /data/local/tmp/trace_60
adb pull /data/local/tmp/trace_70
adb pull /data/local/tmp/trace_80
./display-per-offsets.sh
./display.sh trace_0_50
mv hist.png hist_0_50.png
./display.sh trace_0_60 && mv hist.png hist_0_60.png
./display.sh trace_0_70 && mv hist.png hist_0_70.png
./display.sh trace_0_80 && mv hist.png hist_0_80.png
feh hist*.png
find . -iname "cache-l2x0"
find . -iname "cache*"
find . -iname "cache-l2x0*"
grep -R "outer_cache_flush"
grep -R "outer_flush_all"
grep -R "l2x0*"
grep -R "l2x0_disable"
find . -iname "cache-v7*"
vim arch/arm/include/asm/outercache.h
grep -R "flush_cache_all"
grep -R "__cpuc_flush"
grep -R "flush_dcacge_level"
grep -R "flush_dcache_level"
grep -R "flush_user_all"
cd ~/Chestnut/Repos
cd vim
ls -al *.*
cd bundle
cd vundle
cd ../../
cd ;./
grep -R "F8"
ls
grep . "F8"
grep "F8" .
cd .vim
cd ../
vim ~/.vimrc
ls -al
find . -iname "my-*"
fg
sudo dhclient eth0ing
ping www.google.fr
sudo dhclient eth0
sudo shutdown -h 0
: 1426349579:0;ping www.google.fr
: 1426349712:0;ls
: 1426349730:0;echo $TERM
: 1426349968:0;git clone https://github.com/razaina/my-linux-confs
: 1426349973:0;cd my-linux-confs
: 1426349973:0;ls
: 1426349986:0;ls -al ../
: 1426350050:0;cp -R ../.vim ../.vimrc ../.zsh* .
: 1426350099:0;cd ../
: 1426350101:0;ls -al
: 1426350187:0;tmux
: 1426350193:0;cd Gits
: 1426350194:0;ls
: 1426350199:0;rm -R my-linux-confs
: 1426350210:0;sudo rm -R my-linux-confs
: 1426350241:0;cd my-linux-confs
: 1426350242:0;ls
: 1426350245:0;cd ../
: 1426350245:0;ls
: 1426350250:0;cd my-linux-confs
: 1426350264:0;ls -al .*
: 1426350270:0;ls -al
: 1426350313:0;cp -R ~/.oh-my-zsh .
: 1426350329:0;cp -R ~/.ssh .
: 1426350354:0;cp -R ~/.vim .
: 1426350372:0;cp -R ~/.vimrc .
: 1426350390:0;cp ~/.zsh .
: 1426350393:0;cp -R ~/.zsh .
: 1426350402:0;vim ~/.bashrc
: 1426350438:0;cp ~/.bashrc .
: 1426350451:0;cp -R ~/.colourzsh .
: 1426350477:0;cp -R ~/.ctags .
: 1426350534:0;cp ~/.viminfo .
: 1426350541:0;cp ~/.vimrc .
: 1426350551:0;vim ~/.Xdefaults
: 1426350571:0;cp ~/.Xdefaults .
: 1426350579:0;vim ~/.Xauthority
: 1426350599:0;vim .xinitrc
: 1426350607:0;vi .Xresources
: 1426350690:0;cp -R ~/.zsh* .
